//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ControllerScouting {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("scoutingdbDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class scoutingdbDataSet : global::System.Data.DataSet {
        
        private ActivitiesDataTable tableActivities;
        
        private UpdatePreviewsDataTable tableUpdatePreviews;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public scoutingdbDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected scoutingdbDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Activities"] != null)) {
                    base.Tables.Add(new ActivitiesDataTable(ds.Tables["Activities"]));
                }
                if ((ds.Tables["UpdatePreviews"] != null)) {
                    base.Tables.Add(new UpdatePreviewsDataTable(ds.Tables["UpdatePreviews"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ActivitiesDataTable Activities {
            get {
                return this.tableActivities;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UpdatePreviewsDataTable UpdatePreviews {
            get {
                return this.tableUpdatePreviews;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            scoutingdbDataSet cln = ((scoutingdbDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Activities"] != null)) {
                    base.Tables.Add(new ActivitiesDataTable(ds.Tables["Activities"]));
                }
                if ((ds.Tables["UpdatePreviews"] != null)) {
                    base.Tables.Add(new UpdatePreviewsDataTable(ds.Tables["UpdatePreviews"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableActivities = ((ActivitiesDataTable)(base.Tables["Activities"]));
            if ((initTable == true)) {
                if ((this.tableActivities != null)) {
                    this.tableActivities.InitVars();
                }
            }
            this.tableUpdatePreviews = ((UpdatePreviewsDataTable)(base.Tables["UpdatePreviews"]));
            if ((initTable == true)) {
                if ((this.tableUpdatePreviews != null)) {
                    this.tableUpdatePreviews.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "scoutingdbDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/scoutingdbDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableActivities = new ActivitiesDataTable();
            base.Tables.Add(this.tableActivities);
            this.tableUpdatePreviews = new UpdatePreviewsDataTable();
            base.Tables.Add(this.tableUpdatePreviews);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeActivities() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeUpdatePreviews() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            scoutingdbDataSet ds = new scoutingdbDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ActivitiesRowChangeEventHandler(object sender, ActivitiesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void UpdatePreviewsRowChangeEventHandler(object sender, UpdatePreviewsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ActivitiesDataTable : global::System.Data.TypedTableBase<ActivitiesRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnTeam;
            
            private global::System.Data.DataColumn columnMatch;
            
            private global::System.Data.DataColumn columnTime;
            
            private global::System.Data.DataColumn columnRecordType;
            
            private global::System.Data.DataColumn columnMode;
            
            private global::System.Data.DataColumn columnDriveSta;
            
            private global::System.Data.DataColumn columnDefense;
            
            private global::System.Data.DataColumn columnDefenseValue;
            
            private global::System.Data.DataColumn columnAvoidance;
            
            private global::System.Data.DataColumn columnScouterName;
            
            private global::System.Data.DataColumn columnScouterError;
            
            private global::System.Data.DataColumn columnMatch_event;
            
            private global::System.Data.DataColumn columnStrategy;
            
            private global::System.Data.DataColumn columnCoop;
            
            private global::System.Data.DataColumn columnDZTime;
            
            private global::System.Data.DataColumn columnDel_Near_Far;
            
            private global::System.Data.DataColumn columnAcqAlgae_Near_Far;
            
            private global::System.Data.DataColumn columnAcqCoral_Near_Far;
            
            private global::System.Data.DataColumn columnStarting_Loc;
            
            private global::System.Data.DataColumn columnLeave;
            
            private global::System.Data.DataColumn columnAcqCoralS;
            
            private global::System.Data.DataColumn columnAcqCoralF;
            
            private global::System.Data.DataColumn columnAcqAlgaeR;
            
            private global::System.Data.DataColumn columnAcqAlgaeF;
            
            private global::System.Data.DataColumn columnDelCoralL1;
            
            private global::System.Data.DataColumn columnDelCoralL2;
            
            private global::System.Data.DataColumn columnDelCoralL3;
            
            private global::System.Data.DataColumn columnDelCoralL4;
            
            private global::System.Data.DataColumn columnDelCoralF;
            
            private global::System.Data.DataColumn columnDelAlgaeP;
            
            private global::System.Data.DataColumn columnDelAlgaeN;
            
            private global::System.Data.DataColumn columnDelAlgaeF;
            
            private global::System.Data.DataColumn columnClimbT;
            
            private global::System.Data.DataColumn columnEndState;
            
            private global::System.Data.DataColumn columnCageAttempt;
            
            private global::System.Data.DataColumn columnSelectedCage;
            
            private global::System.Data.DataColumn columnPointScored;
            
            private global::System.Data.DataColumn columnDisAlg;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ActivitiesDataTable() {
                this.TableName = "Activities";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ActivitiesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ActivitiesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TeamColumn {
                get {
                    return this.columnTeam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MatchColumn {
                get {
                    return this.columnMatch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TimeColumn {
                get {
                    return this.columnTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RecordTypeColumn {
                get {
                    return this.columnRecordType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeColumn {
                get {
                    return this.columnMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DriveStaColumn {
                get {
                    return this.columnDriveSta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DefenseColumn {
                get {
                    return this.columnDefense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DefenseValueColumn {
                get {
                    return this.columnDefenseValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AvoidanceColumn {
                get {
                    return this.columnAvoidance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ScouterNameColumn {
                get {
                    return this.columnScouterName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ScouterErrorColumn {
                get {
                    return this.columnScouterError;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Match_eventColumn {
                get {
                    return this.columnMatch_event;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StrategyColumn {
                get {
                    return this.columnStrategy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CoopColumn {
                get {
                    return this.columnCoop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DZTimeColumn {
                get {
                    return this.columnDZTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Del_Near_FarColumn {
                get {
                    return this.columnDel_Near_Far;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AcqAlgae_Near_FarColumn {
                get {
                    return this.columnAcqAlgae_Near_Far;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AcqCoral_Near_FarColumn {
                get {
                    return this.columnAcqCoral_Near_Far;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Starting_LocColumn {
                get {
                    return this.columnStarting_Loc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LeaveColumn {
                get {
                    return this.columnLeave;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AcqCoralSColumn {
                get {
                    return this.columnAcqCoralS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AcqCoralFColumn {
                get {
                    return this.columnAcqCoralF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AcqAlgaeRColumn {
                get {
                    return this.columnAcqAlgaeR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AcqAlgaeFColumn {
                get {
                    return this.columnAcqAlgaeF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelCoralL1Column {
                get {
                    return this.columnDelCoralL1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelCoralL2Column {
                get {
                    return this.columnDelCoralL2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelCoralL3Column {
                get {
                    return this.columnDelCoralL3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelCoralL4Column {
                get {
                    return this.columnDelCoralL4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelCoralFColumn {
                get {
                    return this.columnDelCoralF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelAlgaePColumn {
                get {
                    return this.columnDelAlgaeP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelAlgaeNColumn {
                get {
                    return this.columnDelAlgaeN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelAlgaeFColumn {
                get {
                    return this.columnDelAlgaeF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ClimbTColumn {
                get {
                    return this.columnClimbT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EndStateColumn {
                get {
                    return this.columnEndState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CageAttemptColumn {
                get {
                    return this.columnCageAttempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SelectedCageColumn {
                get {
                    return this.columnSelectedCage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PointScoredColumn {
                get {
                    return this.columnPointScored;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DisAlgColumn {
                get {
                    return this.columnDisAlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ActivitiesRow this[int index] {
                get {
                    return ((ActivitiesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ActivitiesRowChangeEventHandler ActivitiesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ActivitiesRowChangeEventHandler ActivitiesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ActivitiesRowChangeEventHandler ActivitiesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ActivitiesRowChangeEventHandler ActivitiesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddActivitiesRow(ActivitiesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ActivitiesRow AddActivitiesRow(
                        string Team, 
                        int Match, 
                        System.DateTime Time, 
                        string RecordType, 
                        string Mode, 
                        string DriveSta, 
                        string Defense, 
                        string DefenseValue, 
                        string Avoidance, 
                        string ScouterName, 
                        long ScouterError, 
                        string Match_event, 
                        string Strategy, 
                        int Coop, 
                        double DZTime, 
                        string Del_Near_Far, 
                        string AcqAlgae_Near_Far, 
                        string AcqCoral_Near_Far, 
                        string Starting_Loc, 
                        string Leave, 
                        int AcqCoralS, 
                        int AcqCoralF, 
                        int AcqAlgaeR, 
                        int AcqAlgaeF, 
                        int DelCoralL1, 
                        int DelCoralL2, 
                        int DelCoralL3, 
                        int DelCoralL4, 
                        int DelCoralF, 
                        int DelAlgaeP, 
                        int DelAlgaeN, 
                        int DelAlgaeF, 
                        double ClimbT, 
                        string EndState, 
                        string CageAttempt, 
                        string SelectedCage, 
                        string PointScored, 
                        int DisAlg) {
                ActivitiesRow rowActivitiesRow = ((ActivitiesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Team,
                        Match,
                        Time,
                        RecordType,
                        Mode,
                        DriveSta,
                        Defense,
                        DefenseValue,
                        Avoidance,
                        ScouterName,
                        ScouterError,
                        Match_event,
                        Strategy,
                        Coop,
                        DZTime,
                        Del_Near_Far,
                        AcqAlgae_Near_Far,
                        AcqCoral_Near_Far,
                        Starting_Loc,
                        Leave,
                        AcqCoralS,
                        AcqCoralF,
                        AcqAlgaeR,
                        AcqAlgaeF,
                        DelCoralL1,
                        DelCoralL2,
                        DelCoralL3,
                        DelCoralL4,
                        DelCoralF,
                        DelAlgaeP,
                        DelAlgaeN,
                        DelAlgaeF,
                        ClimbT,
                        EndState,
                        CageAttempt,
                        SelectedCage,
                        PointScored,
                        DisAlg};
                rowActivitiesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowActivitiesRow);
                return rowActivitiesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ActivitiesRow FindById(int Id) {
                return ((ActivitiesRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ActivitiesDataTable cln = ((ActivitiesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ActivitiesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnTeam = base.Columns["Team"];
                this.columnMatch = base.Columns["Match"];
                this.columnTime = base.Columns["Time"];
                this.columnRecordType = base.Columns["RecordType"];
                this.columnMode = base.Columns["Mode"];
                this.columnDriveSta = base.Columns["DriveSta"];
                this.columnDefense = base.Columns["Defense"];
                this.columnDefenseValue = base.Columns["DefenseValue"];
                this.columnAvoidance = base.Columns["Avoidance"];
                this.columnScouterName = base.Columns["ScouterName"];
                this.columnScouterError = base.Columns["ScouterError"];
                this.columnMatch_event = base.Columns["Match_event"];
                this.columnStrategy = base.Columns["Strategy"];
                this.columnCoop = base.Columns["Coop"];
                this.columnDZTime = base.Columns["DZTime"];
                this.columnDel_Near_Far = base.Columns["Del_Near_Far"];
                this.columnAcqAlgae_Near_Far = base.Columns["AcqAlgae_Near_Far"];
                this.columnAcqCoral_Near_Far = base.Columns["AcqCoral_Near_Far"];
                this.columnStarting_Loc = base.Columns["Starting_Loc"];
                this.columnLeave = base.Columns["Leave"];
                this.columnAcqCoralS = base.Columns["AcqCoralS"];
                this.columnAcqCoralF = base.Columns["AcqCoralF"];
                this.columnAcqAlgaeR = base.Columns["AcqAlgaeR"];
                this.columnAcqAlgaeF = base.Columns["AcqAlgaeF"];
                this.columnDelCoralL1 = base.Columns["DelCoralL1"];
                this.columnDelCoralL2 = base.Columns["DelCoralL2"];
                this.columnDelCoralL3 = base.Columns["DelCoralL3"];
                this.columnDelCoralL4 = base.Columns["DelCoralL4"];
                this.columnDelCoralF = base.Columns["DelCoralF"];
                this.columnDelAlgaeP = base.Columns["DelAlgaeP"];
                this.columnDelAlgaeN = base.Columns["DelAlgaeN"];
                this.columnDelAlgaeF = base.Columns["DelAlgaeF"];
                this.columnClimbT = base.Columns["ClimbT"];
                this.columnEndState = base.Columns["EndState"];
                this.columnCageAttempt = base.Columns["CageAttempt"];
                this.columnSelectedCage = base.Columns["SelectedCage"];
                this.columnPointScored = base.Columns["PointScored"];
                this.columnDisAlg = base.Columns["DisAlg"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnTeam = new global::System.Data.DataColumn("Team", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeam);
                this.columnMatch = new global::System.Data.DataColumn("Match", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatch);
                this.columnTime = new global::System.Data.DataColumn("Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTime);
                this.columnRecordType = new global::System.Data.DataColumn("RecordType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordType);
                this.columnMode = new global::System.Data.DataColumn("Mode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMode);
                this.columnDriveSta = new global::System.Data.DataColumn("DriveSta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriveSta);
                this.columnDefense = new global::System.Data.DataColumn("Defense", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefense);
                this.columnDefenseValue = new global::System.Data.DataColumn("DefenseValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefenseValue);
                this.columnAvoidance = new global::System.Data.DataColumn("Avoidance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAvoidance);
                this.columnScouterName = new global::System.Data.DataColumn("ScouterName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScouterName);
                this.columnScouterError = new global::System.Data.DataColumn("ScouterError", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScouterError);
                this.columnMatch_event = new global::System.Data.DataColumn("Match_event", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatch_event);
                this.columnStrategy = new global::System.Data.DataColumn("Strategy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrategy);
                this.columnCoop = new global::System.Data.DataColumn("Coop", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoop);
                this.columnDZTime = new global::System.Data.DataColumn("DZTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDZTime);
                this.columnDel_Near_Far = new global::System.Data.DataColumn("Del_Near_Far", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDel_Near_Far);
                this.columnAcqAlgae_Near_Far = new global::System.Data.DataColumn("AcqAlgae_Near_Far", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqAlgae_Near_Far);
                this.columnAcqCoral_Near_Far = new global::System.Data.DataColumn("AcqCoral_Near_Far", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqCoral_Near_Far);
                this.columnStarting_Loc = new global::System.Data.DataColumn("Starting_Loc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStarting_Loc);
                this.columnLeave = new global::System.Data.DataColumn("Leave", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeave);
                this.columnAcqCoralS = new global::System.Data.DataColumn("AcqCoralS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqCoralS);
                this.columnAcqCoralF = new global::System.Data.DataColumn("AcqCoralF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqCoralF);
                this.columnAcqAlgaeR = new global::System.Data.DataColumn("AcqAlgaeR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqAlgaeR);
                this.columnAcqAlgaeF = new global::System.Data.DataColumn("AcqAlgaeF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqAlgaeF);
                this.columnDelCoralL1 = new global::System.Data.DataColumn("DelCoralL1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelCoralL1);
                this.columnDelCoralL2 = new global::System.Data.DataColumn("DelCoralL2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelCoralL2);
                this.columnDelCoralL3 = new global::System.Data.DataColumn("DelCoralL3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelCoralL3);
                this.columnDelCoralL4 = new global::System.Data.DataColumn("DelCoralL4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelCoralL4);
                this.columnDelCoralF = new global::System.Data.DataColumn("DelCoralF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelCoralF);
                this.columnDelAlgaeP = new global::System.Data.DataColumn("DelAlgaeP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelAlgaeP);
                this.columnDelAlgaeN = new global::System.Data.DataColumn("DelAlgaeN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelAlgaeN);
                this.columnDelAlgaeF = new global::System.Data.DataColumn("DelAlgaeF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelAlgaeF);
                this.columnClimbT = new global::System.Data.DataColumn("ClimbT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClimbT);
                this.columnEndState = new global::System.Data.DataColumn("EndState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndState);
                this.columnCageAttempt = new global::System.Data.DataColumn("CageAttempt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCageAttempt);
                this.columnSelectedCage = new global::System.Data.DataColumn("SelectedCage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectedCage);
                this.columnPointScored = new global::System.Data.DataColumn("PointScored", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPointScored);
                this.columnDisAlg = new global::System.Data.DataColumn("DisAlg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisAlg);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnTeam.MaxLength = 2147483647;
                this.columnMatch.AllowDBNull = false;
                this.columnTime.AllowDBNull = false;
                this.columnRecordType.MaxLength = 2147483647;
                this.columnMode.MaxLength = 2147483647;
                this.columnDriveSta.MaxLength = 2147483647;
                this.columnDefense.MaxLength = 2147483647;
                this.columnDefenseValue.MaxLength = 2147483647;
                this.columnAvoidance.MaxLength = 2147483647;
                this.columnScouterName.MaxLength = 2147483647;
                this.columnScouterError.AllowDBNull = false;
                this.columnMatch_event.MaxLength = 2147483647;
                this.columnStrategy.MaxLength = 2147483647;
                this.columnCoop.AllowDBNull = false;
                this.columnDZTime.AllowDBNull = false;
                this.columnDel_Near_Far.MaxLength = 2147483647;
                this.columnAcqAlgae_Near_Far.MaxLength = 2147483647;
                this.columnAcqCoral_Near_Far.MaxLength = 2147483647;
                this.columnStarting_Loc.MaxLength = 2147483647;
                this.columnLeave.MaxLength = 2147483647;
                this.columnAcqCoralS.AllowDBNull = false;
                this.columnAcqCoralF.AllowDBNull = false;
                this.columnAcqAlgaeR.AllowDBNull = false;
                this.columnAcqAlgaeF.AllowDBNull = false;
                this.columnDelCoralL1.AllowDBNull = false;
                this.columnDelCoralL2.AllowDBNull = false;
                this.columnDelCoralL3.AllowDBNull = false;
                this.columnDelCoralL4.AllowDBNull = false;
                this.columnDelCoralF.AllowDBNull = false;
                this.columnDelAlgaeP.AllowDBNull = false;
                this.columnDelAlgaeN.AllowDBNull = false;
                this.columnDelAlgaeF.AllowDBNull = false;
                this.columnClimbT.AllowDBNull = false;
                this.columnEndState.MaxLength = 2147483647;
                this.columnCageAttempt.MaxLength = 2147483647;
                this.columnSelectedCage.MaxLength = 2147483647;
                this.columnPointScored.MaxLength = 2147483647;
                this.columnDisAlg.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ActivitiesRow NewActivitiesRow() {
                return ((ActivitiesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ActivitiesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ActivitiesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ActivitiesRowChanged != null)) {
                    this.ActivitiesRowChanged(this, new ActivitiesRowChangeEvent(((ActivitiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ActivitiesRowChanging != null)) {
                    this.ActivitiesRowChanging(this, new ActivitiesRowChangeEvent(((ActivitiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ActivitiesRowDeleted != null)) {
                    this.ActivitiesRowDeleted(this, new ActivitiesRowChangeEvent(((ActivitiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ActivitiesRowDeleting != null)) {
                    this.ActivitiesRowDeleting(this, new ActivitiesRowChangeEvent(((ActivitiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveActivitiesRow(ActivitiesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                scoutingdbDataSet ds = new scoutingdbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ActivitiesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UpdatePreviewsDataTable : global::System.Data.TypedTableBase<UpdatePreviewsRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnTeam;
            
            private global::System.Data.DataColumn columnMatch;
            
            private global::System.Data.DataColumn columnTime;
            
            private global::System.Data.DataColumn columnRecordType;
            
            private global::System.Data.DataColumn columnMode;
            
            private global::System.Data.DataColumn columnDriveSta;
            
            private global::System.Data.DataColumn columnDefense;
            
            private global::System.Data.DataColumn columnDefenseValue;
            
            private global::System.Data.DataColumn columnAvoidance;
            
            private global::System.Data.DataColumn columnScouterName;
            
            private global::System.Data.DataColumn columnScouterError;
            
            private global::System.Data.DataColumn columnMatch_event;
            
            private global::System.Data.DataColumn columnStrategy;
            
            private global::System.Data.DataColumn columnCoop;
            
            private global::System.Data.DataColumn columnDZTime;
            
            private global::System.Data.DataColumn columnDel_Near_Far;
            
            private global::System.Data.DataColumn columnAcqAlgae_Near_Far;
            
            private global::System.Data.DataColumn columnAcqCoral_Near_Far;
            
            private global::System.Data.DataColumn columnStarting_Loc;
            
            private global::System.Data.DataColumn columnLeave;
            
            private global::System.Data.DataColumn columnAcqCoralS;
            
            private global::System.Data.DataColumn columnAcqCoralF;
            
            private global::System.Data.DataColumn columnAcqAlgaeR;
            
            private global::System.Data.DataColumn columnAcqAlgaeF;
            
            private global::System.Data.DataColumn columnDelCoralL1;
            
            private global::System.Data.DataColumn columnDelCoralL2;
            
            private global::System.Data.DataColumn columnDelCoralL3;
            
            private global::System.Data.DataColumn columnDelCoralL4;
            
            private global::System.Data.DataColumn columnDelCoralF;
            
            private global::System.Data.DataColumn columnDelAlgaeP;
            
            private global::System.Data.DataColumn columnDelAlgaeN;
            
            private global::System.Data.DataColumn columnDelAlgaeF;
            
            private global::System.Data.DataColumn columnClimbT;
            
            private global::System.Data.DataColumn columnEndState;
            
            private global::System.Data.DataColumn columnCageAttempt;
            
            private global::System.Data.DataColumn columnSelectedCage;
            
            private global::System.Data.DataColumn columnPointScored;
            
            private global::System.Data.DataColumn columnDisAlg;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UpdatePreviewsDataTable() {
                this.TableName = "UpdatePreviews";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal UpdatePreviewsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected UpdatePreviewsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TeamColumn {
                get {
                    return this.columnTeam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MatchColumn {
                get {
                    return this.columnMatch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TimeColumn {
                get {
                    return this.columnTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RecordTypeColumn {
                get {
                    return this.columnRecordType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeColumn {
                get {
                    return this.columnMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DriveStaColumn {
                get {
                    return this.columnDriveSta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DefenseColumn {
                get {
                    return this.columnDefense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DefenseValueColumn {
                get {
                    return this.columnDefenseValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AvoidanceColumn {
                get {
                    return this.columnAvoidance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ScouterNameColumn {
                get {
                    return this.columnScouterName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ScouterErrorColumn {
                get {
                    return this.columnScouterError;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Match_eventColumn {
                get {
                    return this.columnMatch_event;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StrategyColumn {
                get {
                    return this.columnStrategy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CoopColumn {
                get {
                    return this.columnCoop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DZTimeColumn {
                get {
                    return this.columnDZTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Del_Near_FarColumn {
                get {
                    return this.columnDel_Near_Far;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AcqAlgae_Near_FarColumn {
                get {
                    return this.columnAcqAlgae_Near_Far;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AcqCoral_Near_FarColumn {
                get {
                    return this.columnAcqCoral_Near_Far;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Starting_LocColumn {
                get {
                    return this.columnStarting_Loc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LeaveColumn {
                get {
                    return this.columnLeave;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AcqCoralSColumn {
                get {
                    return this.columnAcqCoralS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AcqCoralFColumn {
                get {
                    return this.columnAcqCoralF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AcqAlgaeRColumn {
                get {
                    return this.columnAcqAlgaeR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AcqAlgaeFColumn {
                get {
                    return this.columnAcqAlgaeF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelCoralL1Column {
                get {
                    return this.columnDelCoralL1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelCoralL2Column {
                get {
                    return this.columnDelCoralL2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelCoralL3Column {
                get {
                    return this.columnDelCoralL3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelCoralL4Column {
                get {
                    return this.columnDelCoralL4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelCoralFColumn {
                get {
                    return this.columnDelCoralF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelAlgaePColumn {
                get {
                    return this.columnDelAlgaeP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelAlgaeNColumn {
                get {
                    return this.columnDelAlgaeN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DelAlgaeFColumn {
                get {
                    return this.columnDelAlgaeF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ClimbTColumn {
                get {
                    return this.columnClimbT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EndStateColumn {
                get {
                    return this.columnEndState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CageAttemptColumn {
                get {
                    return this.columnCageAttempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SelectedCageColumn {
                get {
                    return this.columnSelectedCage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PointScoredColumn {
                get {
                    return this.columnPointScored;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DisAlgColumn {
                get {
                    return this.columnDisAlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UpdatePreviewsRow this[int index] {
                get {
                    return ((UpdatePreviewsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event UpdatePreviewsRowChangeEventHandler UpdatePreviewsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event UpdatePreviewsRowChangeEventHandler UpdatePreviewsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event UpdatePreviewsRowChangeEventHandler UpdatePreviewsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event UpdatePreviewsRowChangeEventHandler UpdatePreviewsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddUpdatePreviewsRow(UpdatePreviewsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UpdatePreviewsRow AddUpdatePreviewsRow(
                        string Team, 
                        int Match, 
                        System.DateTime Time, 
                        string RecordType, 
                        string Mode, 
                        string DriveSta, 
                        string Defense, 
                        string DefenseValue, 
                        string Avoidance, 
                        string ScouterName, 
                        long ScouterError, 
                        string Match_event, 
                        string Strategy, 
                        int Coop, 
                        double DZTime, 
                        string Del_Near_Far, 
                        string AcqAlgae_Near_Far, 
                        string AcqCoral_Near_Far, 
                        string Starting_Loc, 
                        string Leave, 
                        int AcqCoralS, 
                        int AcqCoralF, 
                        int AcqAlgaeR, 
                        int AcqAlgaeF, 
                        int DelCoralL1, 
                        int DelCoralL2, 
                        int DelCoralL3, 
                        int DelCoralL4, 
                        int DelCoralF, 
                        int DelAlgaeP, 
                        int DelAlgaeN, 
                        int DelAlgaeF, 
                        double ClimbT, 
                        string EndState, 
                        string CageAttempt, 
                        string SelectedCage, 
                        string PointScored, 
                        int DisAlg) {
                UpdatePreviewsRow rowUpdatePreviewsRow = ((UpdatePreviewsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Team,
                        Match,
                        Time,
                        RecordType,
                        Mode,
                        DriveSta,
                        Defense,
                        DefenseValue,
                        Avoidance,
                        ScouterName,
                        ScouterError,
                        Match_event,
                        Strategy,
                        Coop,
                        DZTime,
                        Del_Near_Far,
                        AcqAlgae_Near_Far,
                        AcqCoral_Near_Far,
                        Starting_Loc,
                        Leave,
                        AcqCoralS,
                        AcqCoralF,
                        AcqAlgaeR,
                        AcqAlgaeF,
                        DelCoralL1,
                        DelCoralL2,
                        DelCoralL3,
                        DelCoralL4,
                        DelCoralF,
                        DelAlgaeP,
                        DelAlgaeN,
                        DelAlgaeF,
                        ClimbT,
                        EndState,
                        CageAttempt,
                        SelectedCage,
                        PointScored,
                        DisAlg};
                rowUpdatePreviewsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUpdatePreviewsRow);
                return rowUpdatePreviewsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UpdatePreviewsRow FindById(int Id) {
                return ((UpdatePreviewsRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                UpdatePreviewsDataTable cln = ((UpdatePreviewsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UpdatePreviewsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnTeam = base.Columns["Team"];
                this.columnMatch = base.Columns["Match"];
                this.columnTime = base.Columns["Time"];
                this.columnRecordType = base.Columns["RecordType"];
                this.columnMode = base.Columns["Mode"];
                this.columnDriveSta = base.Columns["DriveSta"];
                this.columnDefense = base.Columns["Defense"];
                this.columnDefenseValue = base.Columns["DefenseValue"];
                this.columnAvoidance = base.Columns["Avoidance"];
                this.columnScouterName = base.Columns["ScouterName"];
                this.columnScouterError = base.Columns["ScouterError"];
                this.columnMatch_event = base.Columns["Match_event"];
                this.columnStrategy = base.Columns["Strategy"];
                this.columnCoop = base.Columns["Coop"];
                this.columnDZTime = base.Columns["DZTime"];
                this.columnDel_Near_Far = base.Columns["Del_Near_Far"];
                this.columnAcqAlgae_Near_Far = base.Columns["AcqAlgae_Near_Far"];
                this.columnAcqCoral_Near_Far = base.Columns["AcqCoral_Near_Far"];
                this.columnStarting_Loc = base.Columns["Starting_Loc"];
                this.columnLeave = base.Columns["Leave"];
                this.columnAcqCoralS = base.Columns["AcqCoralS"];
                this.columnAcqCoralF = base.Columns["AcqCoralF"];
                this.columnAcqAlgaeR = base.Columns["AcqAlgaeR"];
                this.columnAcqAlgaeF = base.Columns["AcqAlgaeF"];
                this.columnDelCoralL1 = base.Columns["DelCoralL1"];
                this.columnDelCoralL2 = base.Columns["DelCoralL2"];
                this.columnDelCoralL3 = base.Columns["DelCoralL3"];
                this.columnDelCoralL4 = base.Columns["DelCoralL4"];
                this.columnDelCoralF = base.Columns["DelCoralF"];
                this.columnDelAlgaeP = base.Columns["DelAlgaeP"];
                this.columnDelAlgaeN = base.Columns["DelAlgaeN"];
                this.columnDelAlgaeF = base.Columns["DelAlgaeF"];
                this.columnClimbT = base.Columns["ClimbT"];
                this.columnEndState = base.Columns["EndState"];
                this.columnCageAttempt = base.Columns["CageAttempt"];
                this.columnSelectedCage = base.Columns["SelectedCage"];
                this.columnPointScored = base.Columns["PointScored"];
                this.columnDisAlg = base.Columns["DisAlg"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnTeam = new global::System.Data.DataColumn("Team", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeam);
                this.columnMatch = new global::System.Data.DataColumn("Match", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatch);
                this.columnTime = new global::System.Data.DataColumn("Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTime);
                this.columnRecordType = new global::System.Data.DataColumn("RecordType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordType);
                this.columnMode = new global::System.Data.DataColumn("Mode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMode);
                this.columnDriveSta = new global::System.Data.DataColumn("DriveSta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriveSta);
                this.columnDefense = new global::System.Data.DataColumn("Defense", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefense);
                this.columnDefenseValue = new global::System.Data.DataColumn("DefenseValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefenseValue);
                this.columnAvoidance = new global::System.Data.DataColumn("Avoidance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAvoidance);
                this.columnScouterName = new global::System.Data.DataColumn("ScouterName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScouterName);
                this.columnScouterError = new global::System.Data.DataColumn("ScouterError", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScouterError);
                this.columnMatch_event = new global::System.Data.DataColumn("Match_event", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatch_event);
                this.columnStrategy = new global::System.Data.DataColumn("Strategy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrategy);
                this.columnCoop = new global::System.Data.DataColumn("Coop", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoop);
                this.columnDZTime = new global::System.Data.DataColumn("DZTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDZTime);
                this.columnDel_Near_Far = new global::System.Data.DataColumn("Del_Near_Far", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDel_Near_Far);
                this.columnAcqAlgae_Near_Far = new global::System.Data.DataColumn("AcqAlgae_Near_Far", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqAlgae_Near_Far);
                this.columnAcqCoral_Near_Far = new global::System.Data.DataColumn("AcqCoral_Near_Far", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqCoral_Near_Far);
                this.columnStarting_Loc = new global::System.Data.DataColumn("Starting_Loc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStarting_Loc);
                this.columnLeave = new global::System.Data.DataColumn("Leave", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeave);
                this.columnAcqCoralS = new global::System.Data.DataColumn("AcqCoralS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqCoralS);
                this.columnAcqCoralF = new global::System.Data.DataColumn("AcqCoralF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqCoralF);
                this.columnAcqAlgaeR = new global::System.Data.DataColumn("AcqAlgaeR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqAlgaeR);
                this.columnAcqAlgaeF = new global::System.Data.DataColumn("AcqAlgaeF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcqAlgaeF);
                this.columnDelCoralL1 = new global::System.Data.DataColumn("DelCoralL1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelCoralL1);
                this.columnDelCoralL2 = new global::System.Data.DataColumn("DelCoralL2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelCoralL2);
                this.columnDelCoralL3 = new global::System.Data.DataColumn("DelCoralL3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelCoralL3);
                this.columnDelCoralL4 = new global::System.Data.DataColumn("DelCoralL4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelCoralL4);
                this.columnDelCoralF = new global::System.Data.DataColumn("DelCoralF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelCoralF);
                this.columnDelAlgaeP = new global::System.Data.DataColumn("DelAlgaeP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelAlgaeP);
                this.columnDelAlgaeN = new global::System.Data.DataColumn("DelAlgaeN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelAlgaeN);
                this.columnDelAlgaeF = new global::System.Data.DataColumn("DelAlgaeF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelAlgaeF);
                this.columnClimbT = new global::System.Data.DataColumn("ClimbT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClimbT);
                this.columnEndState = new global::System.Data.DataColumn("EndState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndState);
                this.columnCageAttempt = new global::System.Data.DataColumn("CageAttempt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCageAttempt);
                this.columnSelectedCage = new global::System.Data.DataColumn("SelectedCage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectedCage);
                this.columnPointScored = new global::System.Data.DataColumn("PointScored", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPointScored);
                this.columnDisAlg = new global::System.Data.DataColumn("DisAlg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisAlg);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnTeam.MaxLength = 2147483647;
                this.columnMatch.AllowDBNull = false;
                this.columnTime.AllowDBNull = false;
                this.columnRecordType.MaxLength = 2147483647;
                this.columnMode.MaxLength = 2147483647;
                this.columnDriveSta.MaxLength = 2147483647;
                this.columnDefense.MaxLength = 2147483647;
                this.columnDefenseValue.MaxLength = 2147483647;
                this.columnAvoidance.MaxLength = 2147483647;
                this.columnScouterName.MaxLength = 2147483647;
                this.columnScouterError.AllowDBNull = false;
                this.columnMatch_event.MaxLength = 2147483647;
                this.columnStrategy.MaxLength = 2147483647;
                this.columnCoop.AllowDBNull = false;
                this.columnDZTime.AllowDBNull = false;
                this.columnDel_Near_Far.MaxLength = 2147483647;
                this.columnAcqAlgae_Near_Far.MaxLength = 2147483647;
                this.columnAcqCoral_Near_Far.MaxLength = 2147483647;
                this.columnStarting_Loc.MaxLength = 2147483647;
                this.columnLeave.MaxLength = 2147483647;
                this.columnAcqCoralS.AllowDBNull = false;
                this.columnAcqCoralF.AllowDBNull = false;
                this.columnAcqAlgaeR.AllowDBNull = false;
                this.columnAcqAlgaeF.AllowDBNull = false;
                this.columnDelCoralL1.AllowDBNull = false;
                this.columnDelCoralL2.AllowDBNull = false;
                this.columnDelCoralL3.AllowDBNull = false;
                this.columnDelCoralL4.AllowDBNull = false;
                this.columnDelCoralF.AllowDBNull = false;
                this.columnDelAlgaeP.AllowDBNull = false;
                this.columnDelAlgaeN.AllowDBNull = false;
                this.columnDelAlgaeF.AllowDBNull = false;
                this.columnClimbT.AllowDBNull = false;
                this.columnEndState.MaxLength = 2147483647;
                this.columnCageAttempt.MaxLength = 2147483647;
                this.columnSelectedCage.MaxLength = 2147483647;
                this.columnPointScored.MaxLength = 2147483647;
                this.columnDisAlg.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UpdatePreviewsRow NewUpdatePreviewsRow() {
                return ((UpdatePreviewsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UpdatePreviewsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(UpdatePreviewsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UpdatePreviewsRowChanged != null)) {
                    this.UpdatePreviewsRowChanged(this, new UpdatePreviewsRowChangeEvent(((UpdatePreviewsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UpdatePreviewsRowChanging != null)) {
                    this.UpdatePreviewsRowChanging(this, new UpdatePreviewsRowChangeEvent(((UpdatePreviewsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UpdatePreviewsRowDeleted != null)) {
                    this.UpdatePreviewsRowDeleted(this, new UpdatePreviewsRowChangeEvent(((UpdatePreviewsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UpdatePreviewsRowDeleting != null)) {
                    this.UpdatePreviewsRowDeleting(this, new UpdatePreviewsRowChangeEvent(((UpdatePreviewsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveUpdatePreviewsRow(UpdatePreviewsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                scoutingdbDataSet ds = new scoutingdbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UpdatePreviewsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ActivitiesRow : global::System.Data.DataRow {
            
            private ActivitiesDataTable tableActivities;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ActivitiesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableActivities = ((ActivitiesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableActivities.IdColumn]));
                }
                set {
                    this[this.tableActivities.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Team {
                get {
                    try {
                        return ((string)(this[this.tableActivities.TeamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Team\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.TeamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Match {
                get {
                    return ((int)(this[this.tableActivities.MatchColumn]));
                }
                set {
                    this[this.tableActivities.MatchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Time {
                get {
                    return ((global::System.DateTime)(this[this.tableActivities.TimeColumn]));
                }
                set {
                    this[this.tableActivities.TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string RecordType {
                get {
                    try {
                        return ((string)(this[this.tableActivities.RecordTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordType\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.RecordTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Mode {
                get {
                    try {
                        return ((string)(this[this.tableActivities.ModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mode\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.ModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DriveSta {
                get {
                    try {
                        return ((string)(this[this.tableActivities.DriveStaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DriveSta\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.DriveStaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Defense {
                get {
                    try {
                        return ((string)(this[this.tableActivities.DefenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Defense\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.DefenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DefenseValue {
                get {
                    try {
                        return ((string)(this[this.tableActivities.DefenseValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefenseValue\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.DefenseValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Avoidance {
                get {
                    try {
                        return ((string)(this[this.tableActivities.AvoidanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Avoidance\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.AvoidanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ScouterName {
                get {
                    try {
                        return ((string)(this[this.tableActivities.ScouterNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScouterName\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.ScouterNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long ScouterError {
                get {
                    return ((long)(this[this.tableActivities.ScouterErrorColumn]));
                }
                set {
                    this[this.tableActivities.ScouterErrorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Match_event {
                get {
                    try {
                        return ((string)(this[this.tableActivities.Match_eventColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Match_event\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.Match_eventColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Strategy {
                get {
                    try {
                        return ((string)(this[this.tableActivities.StrategyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Strategy\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.StrategyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Coop {
                get {
                    return ((int)(this[this.tableActivities.CoopColumn]));
                }
                set {
                    this[this.tableActivities.CoopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double DZTime {
                get {
                    return ((double)(this[this.tableActivities.DZTimeColumn]));
                }
                set {
                    this[this.tableActivities.DZTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Del_Near_Far {
                get {
                    try {
                        return ((string)(this[this.tableActivities.Del_Near_FarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Del_Near_Far\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.Del_Near_FarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AcqAlgae_Near_Far {
                get {
                    try {
                        return ((string)(this[this.tableActivities.AcqAlgae_Near_FarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcqAlgae_Near_Far\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.AcqAlgae_Near_FarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AcqCoral_Near_Far {
                get {
                    try {
                        return ((string)(this[this.tableActivities.AcqCoral_Near_FarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcqCoral_Near_Far\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.AcqCoral_Near_FarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Starting_Loc {
                get {
                    try {
                        return ((string)(this[this.tableActivities.Starting_LocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Starting_Loc\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.Starting_LocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Leave {
                get {
                    try {
                        return ((string)(this[this.tableActivities.LeaveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Leave\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.LeaveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AcqCoralS {
                get {
                    return ((int)(this[this.tableActivities.AcqCoralSColumn]));
                }
                set {
                    this[this.tableActivities.AcqCoralSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AcqCoralF {
                get {
                    return ((int)(this[this.tableActivities.AcqCoralFColumn]));
                }
                set {
                    this[this.tableActivities.AcqCoralFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AcqAlgaeR {
                get {
                    return ((int)(this[this.tableActivities.AcqAlgaeRColumn]));
                }
                set {
                    this[this.tableActivities.AcqAlgaeRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AcqAlgaeF {
                get {
                    return ((int)(this[this.tableActivities.AcqAlgaeFColumn]));
                }
                set {
                    this[this.tableActivities.AcqAlgaeFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelCoralL1 {
                get {
                    return ((int)(this[this.tableActivities.DelCoralL1Column]));
                }
                set {
                    this[this.tableActivities.DelCoralL1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelCoralL2 {
                get {
                    return ((int)(this[this.tableActivities.DelCoralL2Column]));
                }
                set {
                    this[this.tableActivities.DelCoralL2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelCoralL3 {
                get {
                    return ((int)(this[this.tableActivities.DelCoralL3Column]));
                }
                set {
                    this[this.tableActivities.DelCoralL3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelCoralL4 {
                get {
                    return ((int)(this[this.tableActivities.DelCoralL4Column]));
                }
                set {
                    this[this.tableActivities.DelCoralL4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelCoralF {
                get {
                    return ((int)(this[this.tableActivities.DelCoralFColumn]));
                }
                set {
                    this[this.tableActivities.DelCoralFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelAlgaeP {
                get {
                    return ((int)(this[this.tableActivities.DelAlgaePColumn]));
                }
                set {
                    this[this.tableActivities.DelAlgaePColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelAlgaeN {
                get {
                    return ((int)(this[this.tableActivities.DelAlgaeNColumn]));
                }
                set {
                    this[this.tableActivities.DelAlgaeNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelAlgaeF {
                get {
                    return ((int)(this[this.tableActivities.DelAlgaeFColumn]));
                }
                set {
                    this[this.tableActivities.DelAlgaeFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double ClimbT {
                get {
                    return ((double)(this[this.tableActivities.ClimbTColumn]));
                }
                set {
                    this[this.tableActivities.ClimbTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string EndState {
                get {
                    try {
                        return ((string)(this[this.tableActivities.EndStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndState\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.EndStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CageAttempt {
                get {
                    try {
                        return ((string)(this[this.tableActivities.CageAttemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CageAttempt\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.CageAttemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SelectedCage {
                get {
                    try {
                        return ((string)(this[this.tableActivities.SelectedCageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelectedCage\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.SelectedCageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PointScored {
                get {
                    try {
                        return ((string)(this[this.tableActivities.PointScoredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PointScored\' in table \'Activities\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActivities.PointScoredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DisAlg {
                get {
                    return ((int)(this[this.tableActivities.DisAlgColumn]));
                }
                set {
                    this[this.tableActivities.DisAlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTeamNull() {
                return this.IsNull(this.tableActivities.TeamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTeamNull() {
                this[this.tableActivities.TeamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRecordTypeNull() {
                return this.IsNull(this.tableActivities.RecordTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRecordTypeNull() {
                this[this.tableActivities.RecordTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeNull() {
                return this.IsNull(this.tableActivities.ModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeNull() {
                this[this.tableActivities.ModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDriveStaNull() {
                return this.IsNull(this.tableActivities.DriveStaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDriveStaNull() {
                this[this.tableActivities.DriveStaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDefenseNull() {
                return this.IsNull(this.tableActivities.DefenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDefenseNull() {
                this[this.tableActivities.DefenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDefenseValueNull() {
                return this.IsNull(this.tableActivities.DefenseValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDefenseValueNull() {
                this[this.tableActivities.DefenseValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAvoidanceNull() {
                return this.IsNull(this.tableActivities.AvoidanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAvoidanceNull() {
                this[this.tableActivities.AvoidanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsScouterNameNull() {
                return this.IsNull(this.tableActivities.ScouterNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetScouterNameNull() {
                this[this.tableActivities.ScouterNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMatch_eventNull() {
                return this.IsNull(this.tableActivities.Match_eventColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMatch_eventNull() {
                this[this.tableActivities.Match_eventColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsStrategyNull() {
                return this.IsNull(this.tableActivities.StrategyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetStrategyNull() {
                this[this.tableActivities.StrategyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDel_Near_FarNull() {
                return this.IsNull(this.tableActivities.Del_Near_FarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDel_Near_FarNull() {
                this[this.tableActivities.Del_Near_FarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAcqAlgae_Near_FarNull() {
                return this.IsNull(this.tableActivities.AcqAlgae_Near_FarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAcqAlgae_Near_FarNull() {
                this[this.tableActivities.AcqAlgae_Near_FarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAcqCoral_Near_FarNull() {
                return this.IsNull(this.tableActivities.AcqCoral_Near_FarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAcqCoral_Near_FarNull() {
                this[this.tableActivities.AcqCoral_Near_FarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsStarting_LocNull() {
                return this.IsNull(this.tableActivities.Starting_LocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetStarting_LocNull() {
                this[this.tableActivities.Starting_LocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLeaveNull() {
                return this.IsNull(this.tableActivities.LeaveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLeaveNull() {
                this[this.tableActivities.LeaveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEndStateNull() {
                return this.IsNull(this.tableActivities.EndStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEndStateNull() {
                this[this.tableActivities.EndStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCageAttemptNull() {
                return this.IsNull(this.tableActivities.CageAttemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCageAttemptNull() {
                this[this.tableActivities.CageAttemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSelectedCageNull() {
                return this.IsNull(this.tableActivities.SelectedCageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSelectedCageNull() {
                this[this.tableActivities.SelectedCageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPointScoredNull() {
                return this.IsNull(this.tableActivities.PointScoredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPointScoredNull() {
                this[this.tableActivities.PointScoredColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UpdatePreviewsRow : global::System.Data.DataRow {
            
            private UpdatePreviewsDataTable tableUpdatePreviews;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal UpdatePreviewsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUpdatePreviews = ((UpdatePreviewsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableUpdatePreviews.IdColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Team {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.TeamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Team\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.TeamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Match {
                get {
                    return ((int)(this[this.tableUpdatePreviews.MatchColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.MatchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Time {
                get {
                    return ((global::System.DateTime)(this[this.tableUpdatePreviews.TimeColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string RecordType {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.RecordTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordType\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.RecordTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Mode {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.ModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mode\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.ModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DriveSta {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.DriveStaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DriveSta\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.DriveStaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Defense {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.DefenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Defense\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.DefenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DefenseValue {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.DefenseValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefenseValue\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.DefenseValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Avoidance {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.AvoidanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Avoidance\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.AvoidanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ScouterName {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.ScouterNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScouterName\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.ScouterNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long ScouterError {
                get {
                    return ((long)(this[this.tableUpdatePreviews.ScouterErrorColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.ScouterErrorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Match_event {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.Match_eventColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Match_event\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.Match_eventColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Strategy {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.StrategyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Strategy\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.StrategyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Coop {
                get {
                    return ((int)(this[this.tableUpdatePreviews.CoopColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.CoopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double DZTime {
                get {
                    return ((double)(this[this.tableUpdatePreviews.DZTimeColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.DZTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Del_Near_Far {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.Del_Near_FarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Del_Near_Far\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.Del_Near_FarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AcqAlgae_Near_Far {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.AcqAlgae_Near_FarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcqAlgae_Near_Far\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.AcqAlgae_Near_FarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AcqCoral_Near_Far {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.AcqCoral_Near_FarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcqCoral_Near_Far\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.AcqCoral_Near_FarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Starting_Loc {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.Starting_LocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Starting_Loc\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.Starting_LocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Leave {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.LeaveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Leave\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.LeaveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AcqCoralS {
                get {
                    return ((int)(this[this.tableUpdatePreviews.AcqCoralSColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.AcqCoralSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AcqCoralF {
                get {
                    return ((int)(this[this.tableUpdatePreviews.AcqCoralFColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.AcqCoralFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AcqAlgaeR {
                get {
                    return ((int)(this[this.tableUpdatePreviews.AcqAlgaeRColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.AcqAlgaeRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AcqAlgaeF {
                get {
                    return ((int)(this[this.tableUpdatePreviews.AcqAlgaeFColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.AcqAlgaeFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelCoralL1 {
                get {
                    return ((int)(this[this.tableUpdatePreviews.DelCoralL1Column]));
                }
                set {
                    this[this.tableUpdatePreviews.DelCoralL1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelCoralL2 {
                get {
                    return ((int)(this[this.tableUpdatePreviews.DelCoralL2Column]));
                }
                set {
                    this[this.tableUpdatePreviews.DelCoralL2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelCoralL3 {
                get {
                    return ((int)(this[this.tableUpdatePreviews.DelCoralL3Column]));
                }
                set {
                    this[this.tableUpdatePreviews.DelCoralL3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelCoralL4 {
                get {
                    return ((int)(this[this.tableUpdatePreviews.DelCoralL4Column]));
                }
                set {
                    this[this.tableUpdatePreviews.DelCoralL4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelCoralF {
                get {
                    return ((int)(this[this.tableUpdatePreviews.DelCoralFColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.DelCoralFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelAlgaeP {
                get {
                    return ((int)(this[this.tableUpdatePreviews.DelAlgaePColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.DelAlgaePColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelAlgaeN {
                get {
                    return ((int)(this[this.tableUpdatePreviews.DelAlgaeNColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.DelAlgaeNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DelAlgaeF {
                get {
                    return ((int)(this[this.tableUpdatePreviews.DelAlgaeFColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.DelAlgaeFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double ClimbT {
                get {
                    return ((double)(this[this.tableUpdatePreviews.ClimbTColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.ClimbTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string EndState {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.EndStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndState\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.EndStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CageAttempt {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.CageAttemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CageAttempt\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.CageAttemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SelectedCage {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.SelectedCageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelectedCage\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.SelectedCageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PointScored {
                get {
                    try {
                        return ((string)(this[this.tableUpdatePreviews.PointScoredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PointScored\' in table \'UpdatePreviews\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUpdatePreviews.PointScoredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DisAlg {
                get {
                    return ((int)(this[this.tableUpdatePreviews.DisAlgColumn]));
                }
                set {
                    this[this.tableUpdatePreviews.DisAlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTeamNull() {
                return this.IsNull(this.tableUpdatePreviews.TeamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTeamNull() {
                this[this.tableUpdatePreviews.TeamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRecordTypeNull() {
                return this.IsNull(this.tableUpdatePreviews.RecordTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRecordTypeNull() {
                this[this.tableUpdatePreviews.RecordTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeNull() {
                return this.IsNull(this.tableUpdatePreviews.ModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeNull() {
                this[this.tableUpdatePreviews.ModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDriveStaNull() {
                return this.IsNull(this.tableUpdatePreviews.DriveStaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDriveStaNull() {
                this[this.tableUpdatePreviews.DriveStaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDefenseNull() {
                return this.IsNull(this.tableUpdatePreviews.DefenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDefenseNull() {
                this[this.tableUpdatePreviews.DefenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDefenseValueNull() {
                return this.IsNull(this.tableUpdatePreviews.DefenseValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDefenseValueNull() {
                this[this.tableUpdatePreviews.DefenseValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAvoidanceNull() {
                return this.IsNull(this.tableUpdatePreviews.AvoidanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAvoidanceNull() {
                this[this.tableUpdatePreviews.AvoidanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsScouterNameNull() {
                return this.IsNull(this.tableUpdatePreviews.ScouterNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetScouterNameNull() {
                this[this.tableUpdatePreviews.ScouterNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMatch_eventNull() {
                return this.IsNull(this.tableUpdatePreviews.Match_eventColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMatch_eventNull() {
                this[this.tableUpdatePreviews.Match_eventColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsStrategyNull() {
                return this.IsNull(this.tableUpdatePreviews.StrategyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetStrategyNull() {
                this[this.tableUpdatePreviews.StrategyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDel_Near_FarNull() {
                return this.IsNull(this.tableUpdatePreviews.Del_Near_FarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDel_Near_FarNull() {
                this[this.tableUpdatePreviews.Del_Near_FarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAcqAlgae_Near_FarNull() {
                return this.IsNull(this.tableUpdatePreviews.AcqAlgae_Near_FarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAcqAlgae_Near_FarNull() {
                this[this.tableUpdatePreviews.AcqAlgae_Near_FarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAcqCoral_Near_FarNull() {
                return this.IsNull(this.tableUpdatePreviews.AcqCoral_Near_FarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAcqCoral_Near_FarNull() {
                this[this.tableUpdatePreviews.AcqCoral_Near_FarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsStarting_LocNull() {
                return this.IsNull(this.tableUpdatePreviews.Starting_LocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetStarting_LocNull() {
                this[this.tableUpdatePreviews.Starting_LocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLeaveNull() {
                return this.IsNull(this.tableUpdatePreviews.LeaveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLeaveNull() {
                this[this.tableUpdatePreviews.LeaveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEndStateNull() {
                return this.IsNull(this.tableUpdatePreviews.EndStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEndStateNull() {
                this[this.tableUpdatePreviews.EndStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCageAttemptNull() {
                return this.IsNull(this.tableUpdatePreviews.CageAttemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCageAttemptNull() {
                this[this.tableUpdatePreviews.CageAttemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSelectedCageNull() {
                return this.IsNull(this.tableUpdatePreviews.SelectedCageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSelectedCageNull() {
                this[this.tableUpdatePreviews.SelectedCageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPointScoredNull() {
                return this.IsNull(this.tableUpdatePreviews.PointScoredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPointScoredNull() {
                this[this.tableUpdatePreviews.PointScoredColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ActivitiesRowChangeEvent : global::System.EventArgs {
            
            private ActivitiesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ActivitiesRowChangeEvent(ActivitiesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ActivitiesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class UpdatePreviewsRowChangeEvent : global::System.EventArgs {
            
            private UpdatePreviewsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UpdatePreviewsRowChangeEvent(UpdatePreviewsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UpdatePreviewsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ControllerScouting.scoutingdbDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ActivitiesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ActivitiesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Activities";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Team", "Team");
            tableMapping.ColumnMappings.Add("Match", "Match");
            tableMapping.ColumnMappings.Add("Time", "Time");
            tableMapping.ColumnMappings.Add("RecordType", "RecordType");
            tableMapping.ColumnMappings.Add("Mode", "Mode");
            tableMapping.ColumnMappings.Add("DriveSta", "DriveSta");
            tableMapping.ColumnMappings.Add("Defense", "Defense");
            tableMapping.ColumnMappings.Add("DefenseValue", "DefenseValue");
            tableMapping.ColumnMappings.Add("Avoidance", "Avoidance");
            tableMapping.ColumnMappings.Add("ScouterName", "ScouterName");
            tableMapping.ColumnMappings.Add("ScouterError", "ScouterError");
            tableMapping.ColumnMappings.Add("Match_event", "Match_event");
            tableMapping.ColumnMappings.Add("Strategy", "Strategy");
            tableMapping.ColumnMappings.Add("Coop", "Coop");
            tableMapping.ColumnMappings.Add("DZTime", "DZTime");
            tableMapping.ColumnMappings.Add("Del_Near_Far", "Del_Near_Far");
            tableMapping.ColumnMappings.Add("AcqAlgae_Near_Far", "AcqAlgae_Near_Far");
            tableMapping.ColumnMappings.Add("AcqCoral_Near_Far", "AcqCoral_Near_Far");
            tableMapping.ColumnMappings.Add("Starting_Loc", "Starting_Loc");
            tableMapping.ColumnMappings.Add("Leave", "Leave");
            tableMapping.ColumnMappings.Add("AcqCoralS", "AcqCoralS");
            tableMapping.ColumnMappings.Add("AcqCoralF", "AcqCoralF");
            tableMapping.ColumnMappings.Add("AcqAlgaeR", "AcqAlgaeR");
            tableMapping.ColumnMappings.Add("AcqAlgaeF", "AcqAlgaeF");
            tableMapping.ColumnMappings.Add("DelCoralL1", "DelCoralL1");
            tableMapping.ColumnMappings.Add("DelCoralL2", "DelCoralL2");
            tableMapping.ColumnMappings.Add("DelCoralL3", "DelCoralL3");
            tableMapping.ColumnMappings.Add("DelCoralL4", "DelCoralL4");
            tableMapping.ColumnMappings.Add("DelCoralF", "DelCoralF");
            tableMapping.ColumnMappings.Add("DelAlgaeP", "DelAlgaeP");
            tableMapping.ColumnMappings.Add("DelAlgaeN", "DelAlgaeN");
            tableMapping.ColumnMappings.Add("DelAlgaeF", "DelAlgaeF");
            tableMapping.ColumnMappings.Add("ClimbT", "ClimbT");
            tableMapping.ColumnMappings.Add("EndState", "EndState");
            tableMapping.ColumnMappings.Add("CageAttempt", "CageAttempt");
            tableMapping.ColumnMappings.Add("SelectedCage", "SelectedCage");
            tableMapping.ColumnMappings.Add("PointScored", "PointScored");
            tableMapping.ColumnMappings.Add("DisAlg", "DisAlg");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Activities] WHERE (([Id] = @Original_Id) AND ([Match] = @Original_Match) AND ([Time] = @Original_Time) AND ([ScouterError] = @Original_ScouterError) AND ([Coop] = @Original_Coop) AND ([DZTime] = @Original_DZTime) AND ([AcqCoralS] = @Original_AcqCoralS) AND ([AcqCoralF] = @Original_AcqCoralF) AND ([AcqAlgaeR] = @Original_AcqAlgaeR) AND ([AcqAlgaeF] = @Original_AcqAlgaeF) AND ([DelCoralL1] = @Original_DelCoralL1) AND ([DelCoralL2] = @Original_DelCoralL2) AND ([DelCoralL3] = @Original_DelCoralL3) AND ([DelCoralL4] = @Original_DelCoralL4) AND ([DelCoralF] = @Original_DelCoralF) AND ([DelAlgaeP] = @Original_DelAlgaeP) AND ([DelAlgaeN] = @Original_DelAlgaeN) AND ([DelAlgaeF] = @Original_DelAlgaeF) AND ([ClimbT] = @Original_ClimbT) AND ([DisAlg] = @Original_DisAlg))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Match", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Match", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScouterError", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScouterError", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Coop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DZTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DZTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqCoralS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoralS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqCoralF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoralF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqAlgaeR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgaeR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqAlgaeF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgaeF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralL1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralL2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralL3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralL4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelAlgaeP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelAlgaeN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelAlgaeF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClimbT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClimbT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DisAlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DisAlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Activities] ([Team], [Match], [Time], [RecordType], [Mode], [DriveSta], [Defense], [DefenseValue], [Avoidance], [ScouterName], [ScouterError], [Match_event], [Strategy], [Coop], [DZTime], [Del_Near_Far], [AcqAlgae_Near_Far], [AcqCoral_Near_Far], [Starting_Loc], [Leave], [AcqCoralS], [AcqCoralF], [AcqAlgaeR], [AcqAlgaeF], [DelCoralL1], [DelCoralL2], [DelCoralL3], [DelCoralL4], [DelCoralF], [DelAlgaeP], [DelAlgaeN], [DelAlgaeF], [ClimbT], [EndState], [CageAttempt], [SelectedCage], [PointScored], [DisAlg]) VALUES (@Team, @Match, @Time, @RecordType, @Mode, @DriveSta, @Defense, @DefenseValue, @Avoidance, @ScouterName, @ScouterError, @Match_event, @Strategy, @Coop, @DZTime, @Del_Near_Far, @AcqAlgae_Near_Far, @AcqCoral_Near_Far, @Starting_Loc, @Leave, @AcqCoralS, @AcqCoralF, @AcqAlgaeR, @AcqAlgaeF, @DelCoralL1, @DelCoralL2, @DelCoralL3, @DelCoralL4, @DelCoralF, @DelAlgaeP, @DelAlgaeN, @DelAlgaeF, @ClimbT, @EndState, @CageAttempt, @SelectedCage, @PointScored, @DisAlg);
SELECT Id, Team, Match, Time, RecordType, Mode, DriveSta, Defense, DefenseValue, Avoidance, ScouterName, ScouterError, Match_event, Strategy, Coop, DZTime, Del_Near_Far, AcqAlgae_Near_Far, AcqCoral_Near_Far, Starting_Loc, Leave, AcqCoralS, AcqCoralF, AcqAlgaeR, AcqAlgaeF, DelCoralL1, DelCoralL2, DelCoralL3, DelCoralL4, DelCoralF, DelAlgaeP, DelAlgaeN, DelAlgaeF, ClimbT, EndState, CageAttempt, SelectedCage, PointScored, DisAlg FROM Activities WHERE (Id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Team", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Team", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Match", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Match", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriveSta", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriveSta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Defense", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Defense", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefenseValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefenseValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Avoidance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Avoidance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScouterName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScouterName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScouterError", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScouterError", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Match_event", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Match_event", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Strategy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Strategy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Coop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DZTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DZTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Del_Near_Far", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Del_Near_Far", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqAlgae_Near_Far", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgae_Near_Far", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqCoral_Near_Far", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoral_Near_Far", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Starting_Loc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Starting_Loc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Leave", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Leave", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqCoralS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoralS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqCoralF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoralF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqAlgaeR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgaeR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqAlgaeF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgaeF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralL1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralL2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralL3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralL4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelAlgaeP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelAlgaeN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelAlgaeF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClimbT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClimbT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndState", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CageAttempt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CageAttempt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedCage", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedCage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PointScored", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointScored", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DisAlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DisAlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Activities] SET [Team] = @Team, [Match] = @Match, [Time] = @Time, [" +
                "RecordType] = @RecordType, [Mode] = @Mode, [DriveSta] = @DriveSta, [Defense] = @" +
                "Defense, [DefenseValue] = @DefenseValue, [Avoidance] = @Avoidance, [ScouterName]" +
                " = @ScouterName, [ScouterError] = @ScouterError, [Match_event] = @Match_event, [" +
                "Strategy] = @Strategy, [Coop] = @Coop, [DZTime] = @DZTime, [Del_Near_Far] = @Del" +
                "_Near_Far, [AcqAlgae_Near_Far] = @AcqAlgae_Near_Far, [AcqCoral_Near_Far] = @AcqC" +
                "oral_Near_Far, [Starting_Loc] = @Starting_Loc, [Leave] = @Leave, [AcqCoralS] = @" +
                "AcqCoralS, [AcqCoralF] = @AcqCoralF, [AcqAlgaeR] = @AcqAlgaeR, [AcqAlgaeF] = @Ac" +
                "qAlgaeF, [DelCoralL1] = @DelCoralL1, [DelCoralL2] = @DelCoralL2, [DelCoralL3] = " +
                "@DelCoralL3, [DelCoralL4] = @DelCoralL4, [DelCoralF] = @DelCoralF, [DelAlgaeP] =" +
                " @DelAlgaeP, [DelAlgaeN] = @DelAlgaeN, [DelAlgaeF] = @DelAlgaeF, [ClimbT] = @Cli" +
                "mbT, [EndState] = @EndState, [CageAttempt] = @CageAttempt, [SelectedCage] = @Sel" +
                "ectedCage, [PointScored] = @PointScored, [DisAlg] = @DisAlg WHERE (([Id] = @Orig" +
                "inal_Id) AND ([Match] = @Original_Match) AND ([Time] = @Original_Time) AND ([Sco" +
                "uterError] = @Original_ScouterError) AND ([Coop] = @Original_Coop) AND ([DZTime]" +
                " = @Original_DZTime) AND ([AcqCoralS] = @Original_AcqCoralS) AND ([AcqCoralF] = " +
                "@Original_AcqCoralF) AND ([AcqAlgaeR] = @Original_AcqAlgaeR) AND ([AcqAlgaeF] = " +
                "@Original_AcqAlgaeF) AND ([DelCoralL1] = @Original_DelCoralL1) AND ([DelCoralL2]" +
                " = @Original_DelCoralL2) AND ([DelCoralL3] = @Original_DelCoralL3) AND ([DelCora" +
                "lL4] = @Original_DelCoralL4) AND ([DelCoralF] = @Original_DelCoralF) AND ([DelAl" +
                "gaeP] = @Original_DelAlgaeP) AND ([DelAlgaeN] = @Original_DelAlgaeN) AND ([DelAl" +
                "gaeF] = @Original_DelAlgaeF) AND ([ClimbT] = @Original_ClimbT) AND ([DisAlg] = @" +
                "Original_DisAlg));\r\nSELECT Id, Team, Match, Time, RecordType, Mode, DriveSta, De" +
                "fense, DefenseValue, Avoidance, ScouterName, ScouterError, Match_event, Strategy" +
                ", Coop, DZTime, Del_Near_Far, AcqAlgae_Near_Far, AcqCoral_Near_Far, Starting_Loc" +
                ", Leave, AcqCoralS, AcqCoralF, AcqAlgaeR, AcqAlgaeF, DelCoralL1, DelCoralL2, Del" +
                "CoralL3, DelCoralL4, DelCoralF, DelAlgaeP, DelAlgaeN, DelAlgaeF, ClimbT, EndStat" +
                "e, CageAttempt, SelectedCage, PointScored, DisAlg FROM Activities WHERE (Id = @I" +
                "d)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Team", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Team", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Match", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Match", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriveSta", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriveSta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Defense", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Defense", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefenseValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefenseValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Avoidance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Avoidance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScouterName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScouterName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScouterError", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScouterError", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Match_event", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Match_event", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Strategy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Strategy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Coop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DZTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DZTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Del_Near_Far", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Del_Near_Far", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqAlgae_Near_Far", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgae_Near_Far", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqCoral_Near_Far", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoral_Near_Far", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Starting_Loc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Starting_Loc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Leave", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Leave", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqCoralS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoralS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqCoralF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoralF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqAlgaeR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgaeR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqAlgaeF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgaeF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralL1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralL2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralL3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralL4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelAlgaeP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelAlgaeN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelAlgaeF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClimbT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClimbT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndState", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CageAttempt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CageAttempt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedCage", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedCage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PointScored", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointScored", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DisAlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DisAlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Match", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Match", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScouterError", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScouterError", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Coop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DZTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DZTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqCoralS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoralS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqCoralF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoralF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqAlgaeR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgaeR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqAlgaeF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgaeF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralL1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralL2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralL3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralL4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelAlgaeP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelAlgaeN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelAlgaeF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClimbT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClimbT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DisAlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DisAlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControllerScouting.Properties.Settings.Default.scoutingdbConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, Team, Match, Time, RecordType, Mode, DriveSta, Defense, DefenseValue, Avoidance, ScouterName, ScouterError, Match_event, Strategy, Coop, DZTime, Del_Near_Far, AcqAlgae_Near_Far, AcqCoral_Near_Far, Starting_Loc, Leave, AcqCoralS, AcqCoralF, AcqAlgaeR, AcqAlgaeF, DelCoralL1, DelCoralL2, DelCoralL3, DelCoralL4, DelCoralF, DelAlgaeP, DelAlgaeN, DelAlgaeF, ClimbT, EndState, CageAttempt, SelectedCage, PointScored, DisAlg FROM dbo.Activities";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(scoutingdbDataSet.ActivitiesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual scoutingdbDataSet.ActivitiesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            scoutingdbDataSet.ActivitiesDataTable dataTable = new scoutingdbDataSet.ActivitiesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(scoutingdbDataSet.ActivitiesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(scoutingdbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Activities");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Id, 
                    int Original_Match, 
                    System.DateTime Original_Time, 
                    long Original_ScouterError, 
                    int Original_Coop, 
                    double Original_DZTime, 
                    int Original_AcqCoralS, 
                    int Original_AcqCoralF, 
                    int Original_AcqAlgaeR, 
                    int Original_AcqAlgaeF, 
                    int Original_DelCoralL1, 
                    int Original_DelCoralL2, 
                    int Original_DelCoralL3, 
                    int Original_DelCoralL4, 
                    int Original_DelCoralF, 
                    int Original_DelAlgaeP, 
                    int Original_DelAlgaeN, 
                    int Original_DelAlgaeF, 
                    double Original_ClimbT, 
                    int Original_DisAlg) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Match));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_Time));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((long)(Original_ScouterError));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Coop));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_DZTime));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_AcqCoralS));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_AcqCoralF));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_AcqAlgaeR));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_AcqAlgaeF));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_DelCoralL1));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_DelCoralL2));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_DelCoralL3));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_DelCoralL4));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_DelCoralF));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_DelAlgaeP));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_DelAlgaeN));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_DelAlgaeF));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_ClimbT));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_DisAlg));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Team, 
                    int Match, 
                    System.DateTime Time, 
                    string RecordType, 
                    string Mode, 
                    string DriveSta, 
                    string Defense, 
                    string DefenseValue, 
                    string Avoidance, 
                    string ScouterName, 
                    long ScouterError, 
                    string Match_event, 
                    string Strategy, 
                    int Coop, 
                    double DZTime, 
                    string Del_Near_Far, 
                    string AcqAlgae_Near_Far, 
                    string AcqCoral_Near_Far, 
                    string Starting_Loc, 
                    string Leave, 
                    int AcqCoralS, 
                    int AcqCoralF, 
                    int AcqAlgaeR, 
                    int AcqAlgaeF, 
                    int DelCoralL1, 
                    int DelCoralL2, 
                    int DelCoralL3, 
                    int DelCoralL4, 
                    int DelCoralF, 
                    int DelAlgaeP, 
                    int DelAlgaeN, 
                    int DelAlgaeF, 
                    double ClimbT, 
                    string EndState, 
                    string CageAttempt, 
                    string SelectedCage, 
                    string PointScored, 
                    int DisAlg) {
            if ((Team == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Team));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Match));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Time));
            if ((RecordType == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(RecordType));
            }
            if ((Mode == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Mode));
            }
            if ((DriveSta == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(DriveSta));
            }
            if ((Defense == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Defense));
            }
            if ((DefenseValue == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(DefenseValue));
            }
            if ((Avoidance == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Avoidance));
            }
            if ((ScouterName == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ScouterName));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((long)(ScouterError));
            if ((Match_event == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Match_event));
            }
            if ((Strategy == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Strategy));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(Coop));
            this.Adapter.InsertCommand.Parameters[14].Value = ((double)(DZTime));
            if ((Del_Near_Far == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Del_Near_Far));
            }
            if ((AcqAlgae_Near_Far == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(AcqAlgae_Near_Far));
            }
            if ((AcqCoral_Near_Far == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(AcqCoral_Near_Far));
            }
            if ((Starting_Loc == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Starting_Loc));
            }
            if ((Leave == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Leave));
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((int)(AcqCoralS));
            this.Adapter.InsertCommand.Parameters[21].Value = ((int)(AcqCoralF));
            this.Adapter.InsertCommand.Parameters[22].Value = ((int)(AcqAlgaeR));
            this.Adapter.InsertCommand.Parameters[23].Value = ((int)(AcqAlgaeF));
            this.Adapter.InsertCommand.Parameters[24].Value = ((int)(DelCoralL1));
            this.Adapter.InsertCommand.Parameters[25].Value = ((int)(DelCoralL2));
            this.Adapter.InsertCommand.Parameters[26].Value = ((int)(DelCoralL3));
            this.Adapter.InsertCommand.Parameters[27].Value = ((int)(DelCoralL4));
            this.Adapter.InsertCommand.Parameters[28].Value = ((int)(DelCoralF));
            this.Adapter.InsertCommand.Parameters[29].Value = ((int)(DelAlgaeP));
            this.Adapter.InsertCommand.Parameters[30].Value = ((int)(DelAlgaeN));
            this.Adapter.InsertCommand.Parameters[31].Value = ((int)(DelAlgaeF));
            this.Adapter.InsertCommand.Parameters[32].Value = ((double)(ClimbT));
            if ((EndState == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(EndState));
            }
            if ((CageAttempt == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(CageAttempt));
            }
            if ((SelectedCage == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(SelectedCage));
            }
            if ((PointScored == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(PointScored));
            }
            this.Adapter.InsertCommand.Parameters[37].Value = ((int)(DisAlg));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Team, 
                    int Match, 
                    System.DateTime Time, 
                    string RecordType, 
                    string Mode, 
                    string DriveSta, 
                    string Defense, 
                    string DefenseValue, 
                    string Avoidance, 
                    string ScouterName, 
                    long ScouterError, 
                    string Match_event, 
                    string Strategy, 
                    int Coop, 
                    double DZTime, 
                    string Del_Near_Far, 
                    string AcqAlgae_Near_Far, 
                    string AcqCoral_Near_Far, 
                    string Starting_Loc, 
                    string Leave, 
                    int AcqCoralS, 
                    int AcqCoralF, 
                    int AcqAlgaeR, 
                    int AcqAlgaeF, 
                    int DelCoralL1, 
                    int DelCoralL2, 
                    int DelCoralL3, 
                    int DelCoralL4, 
                    int DelCoralF, 
                    int DelAlgaeP, 
                    int DelAlgaeN, 
                    int DelAlgaeF, 
                    double ClimbT, 
                    string EndState, 
                    string CageAttempt, 
                    string SelectedCage, 
                    string PointScored, 
                    int DisAlg, 
                    int Original_Id, 
                    int Original_Match, 
                    System.DateTime Original_Time, 
                    long Original_ScouterError, 
                    int Original_Coop, 
                    double Original_DZTime, 
                    int Original_AcqCoralS, 
                    int Original_AcqCoralF, 
                    int Original_AcqAlgaeR, 
                    int Original_AcqAlgaeF, 
                    int Original_DelCoralL1, 
                    int Original_DelCoralL2, 
                    int Original_DelCoralL3, 
                    int Original_DelCoralL4, 
                    int Original_DelCoralF, 
                    int Original_DelAlgaeP, 
                    int Original_DelAlgaeN, 
                    int Original_DelAlgaeF, 
                    double Original_ClimbT, 
                    int Original_DisAlg, 
                    int Id) {
            if ((Team == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Team));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Match));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Time));
            if ((RecordType == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(RecordType));
            }
            if ((Mode == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Mode));
            }
            if ((DriveSta == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(DriveSta));
            }
            if ((Defense == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Defense));
            }
            if ((DefenseValue == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(DefenseValue));
            }
            if ((Avoidance == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Avoidance));
            }
            if ((ScouterName == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ScouterName));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(ScouterError));
            if ((Match_event == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Match_event));
            }
            if ((Strategy == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Strategy));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Coop));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(DZTime));
            if ((Del_Near_Far == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Del_Near_Far));
            }
            if ((AcqAlgae_Near_Far == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(AcqAlgae_Near_Far));
            }
            if ((AcqCoral_Near_Far == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(AcqCoral_Near_Far));
            }
            if ((Starting_Loc == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Starting_Loc));
            }
            if ((Leave == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Leave));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(AcqCoralS));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(AcqCoralF));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(AcqAlgaeR));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(AcqAlgaeF));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(DelCoralL1));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(DelCoralL2));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(DelCoralL3));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(DelCoralL4));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(DelCoralF));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(DelAlgaeP));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(DelAlgaeN));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(DelAlgaeF));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(ClimbT));
            if ((EndState == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(EndState));
            }
            if ((CageAttempt == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(CageAttempt));
            }
            if ((SelectedCage == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(SelectedCage));
            }
            if ((PointScored == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(PointScored));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(DisAlg));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_Id));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_Match));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(Original_Time));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((long)(Original_ScouterError));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_Coop));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((double)(Original_DZTime));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(Original_AcqCoralS));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_AcqCoralF));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Original_AcqAlgaeR));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(Original_AcqAlgaeF));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(Original_DelCoralL1));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_DelCoralL2));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(Original_DelCoralL3));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(Original_DelCoralL4));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(Original_DelCoralF));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(Original_DelAlgaeP));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(Original_DelAlgaeN));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(Original_DelAlgaeF));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((double)(Original_ClimbT));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_DisAlg));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Team, 
                    int Match, 
                    System.DateTime Time, 
                    string RecordType, 
                    string Mode, 
                    string DriveSta, 
                    string Defense, 
                    string DefenseValue, 
                    string Avoidance, 
                    string ScouterName, 
                    long ScouterError, 
                    string Match_event, 
                    string Strategy, 
                    int Coop, 
                    double DZTime, 
                    string Del_Near_Far, 
                    string AcqAlgae_Near_Far, 
                    string AcqCoral_Near_Far, 
                    string Starting_Loc, 
                    string Leave, 
                    int AcqCoralS, 
                    int AcqCoralF, 
                    int AcqAlgaeR, 
                    int AcqAlgaeF, 
                    int DelCoralL1, 
                    int DelCoralL2, 
                    int DelCoralL3, 
                    int DelCoralL4, 
                    int DelCoralF, 
                    int DelAlgaeP, 
                    int DelAlgaeN, 
                    int DelAlgaeF, 
                    double ClimbT, 
                    string EndState, 
                    string CageAttempt, 
                    string SelectedCage, 
                    string PointScored, 
                    int DisAlg, 
                    int Original_Id, 
                    int Original_Match, 
                    System.DateTime Original_Time, 
                    long Original_ScouterError, 
                    int Original_Coop, 
                    double Original_DZTime, 
                    int Original_AcqCoralS, 
                    int Original_AcqCoralF, 
                    int Original_AcqAlgaeR, 
                    int Original_AcqAlgaeF, 
                    int Original_DelCoralL1, 
                    int Original_DelCoralL2, 
                    int Original_DelCoralL3, 
                    int Original_DelCoralL4, 
                    int Original_DelCoralF, 
                    int Original_DelAlgaeP, 
                    int Original_DelAlgaeN, 
                    int Original_DelAlgaeF, 
                    double Original_ClimbT, 
                    int Original_DisAlg) {
            return this.Update(Team, Match, Time, RecordType, Mode, DriveSta, Defense, DefenseValue, Avoidance, ScouterName, ScouterError, Match_event, Strategy, Coop, DZTime, Del_Near_Far, AcqAlgae_Near_Far, AcqCoral_Near_Far, Starting_Loc, Leave, AcqCoralS, AcqCoralF, AcqAlgaeR, AcqAlgaeF, DelCoralL1, DelCoralL2, DelCoralL3, DelCoralL4, DelCoralF, DelAlgaeP, DelAlgaeN, DelAlgaeF, ClimbT, EndState, CageAttempt, SelectedCage, PointScored, DisAlg, Original_Id, Original_Match, Original_Time, Original_ScouterError, Original_Coop, Original_DZTime, Original_AcqCoralS, Original_AcqCoralF, Original_AcqAlgaeR, Original_AcqAlgaeF, Original_DelCoralL1, Original_DelCoralL2, Original_DelCoralL3, Original_DelCoralL4, Original_DelCoralF, Original_DelAlgaeP, Original_DelAlgaeN, Original_DelAlgaeF, Original_ClimbT, Original_DisAlg, Original_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UpdatePreviewsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdatePreviewsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UpdatePreviews";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Team", "Team");
            tableMapping.ColumnMappings.Add("Match", "Match");
            tableMapping.ColumnMappings.Add("Time", "Time");
            tableMapping.ColumnMappings.Add("RecordType", "RecordType");
            tableMapping.ColumnMappings.Add("Mode", "Mode");
            tableMapping.ColumnMappings.Add("DriveSta", "DriveSta");
            tableMapping.ColumnMappings.Add("Defense", "Defense");
            tableMapping.ColumnMappings.Add("DefenseValue", "DefenseValue");
            tableMapping.ColumnMappings.Add("Avoidance", "Avoidance");
            tableMapping.ColumnMappings.Add("ScouterName", "ScouterName");
            tableMapping.ColumnMappings.Add("ScouterError", "ScouterError");
            tableMapping.ColumnMappings.Add("Match_event", "Match_event");
            tableMapping.ColumnMappings.Add("Strategy", "Strategy");
            tableMapping.ColumnMappings.Add("Coop", "Coop");
            tableMapping.ColumnMappings.Add("DZTime", "DZTime");
            tableMapping.ColumnMappings.Add("Del_Near_Far", "Del_Near_Far");
            tableMapping.ColumnMappings.Add("AcqAlgae_Near_Far", "AcqAlgae_Near_Far");
            tableMapping.ColumnMappings.Add("AcqCoral_Near_Far", "AcqCoral_Near_Far");
            tableMapping.ColumnMappings.Add("Starting_Loc", "Starting_Loc");
            tableMapping.ColumnMappings.Add("Leave", "Leave");
            tableMapping.ColumnMappings.Add("AcqCoralS", "AcqCoralS");
            tableMapping.ColumnMappings.Add("AcqCoralF", "AcqCoralF");
            tableMapping.ColumnMappings.Add("AcqAlgaeR", "AcqAlgaeR");
            tableMapping.ColumnMappings.Add("AcqAlgaeF", "AcqAlgaeF");
            tableMapping.ColumnMappings.Add("DelCoralL1", "DelCoralL1");
            tableMapping.ColumnMappings.Add("DelCoralL2", "DelCoralL2");
            tableMapping.ColumnMappings.Add("DelCoralL3", "DelCoralL3");
            tableMapping.ColumnMappings.Add("DelCoralL4", "DelCoralL4");
            tableMapping.ColumnMappings.Add("DelCoralF", "DelCoralF");
            tableMapping.ColumnMappings.Add("DelAlgaeP", "DelAlgaeP");
            tableMapping.ColumnMappings.Add("DelAlgaeN", "DelAlgaeN");
            tableMapping.ColumnMappings.Add("DelAlgaeF", "DelAlgaeF");
            tableMapping.ColumnMappings.Add("ClimbT", "ClimbT");
            tableMapping.ColumnMappings.Add("EndState", "EndState");
            tableMapping.ColumnMappings.Add("CageAttempt", "CageAttempt");
            tableMapping.ColumnMappings.Add("SelectedCage", "SelectedCage");
            tableMapping.ColumnMappings.Add("PointScored", "PointScored");
            tableMapping.ColumnMappings.Add("DisAlg", "DisAlg");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[UpdatePreviews] WHERE (([Id] = @Original_Id) AND ([Match] = @Original_Match) AND ([Time] = @Original_Time) AND ([ScouterError] = @Original_ScouterError) AND ([Coop] = @Original_Coop) AND ([DZTime] = @Original_DZTime) AND ([AcqCoralS] = @Original_AcqCoralS) AND ([AcqCoralF] = @Original_AcqCoralF) AND ([AcqAlgaeR] = @Original_AcqAlgaeR) AND ([AcqAlgaeF] = @Original_AcqAlgaeF) AND ([DelCoralL1] = @Original_DelCoralL1) AND ([DelCoralL2] = @Original_DelCoralL2) AND ([DelCoralL3] = @Original_DelCoralL3) AND ([DelCoralL4] = @Original_DelCoralL4) AND ([DelCoralF] = @Original_DelCoralF) AND ([DelAlgaeP] = @Original_DelAlgaeP) AND ([DelAlgaeN] = @Original_DelAlgaeN) AND ([DelAlgaeF] = @Original_DelAlgaeF) AND ([ClimbT] = @Original_ClimbT) AND ([DisAlg] = @Original_DisAlg))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Match", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Match", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScouterError", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScouterError", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Coop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DZTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DZTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqCoralS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoralS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqCoralF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoralF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqAlgaeR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgaeR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqAlgaeF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgaeF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralL1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralL2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralL3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralL4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelAlgaeP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelAlgaeN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelAlgaeF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClimbT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClimbT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DisAlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DisAlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[UpdatePreviews] ([Team], [Match], [Time], [RecordType], [Mode], [DriveSta], [Defense], [DefenseValue], [Avoidance], [ScouterName], [ScouterError], [Match_event], [Strategy], [Coop], [DZTime], [Del_Near_Far], [AcqAlgae_Near_Far], [AcqCoral_Near_Far], [Starting_Loc], [Leave], [AcqCoralS], [AcqCoralF], [AcqAlgaeR], [AcqAlgaeF], [DelCoralL1], [DelCoralL2], [DelCoralL3], [DelCoralL4], [DelCoralF], [DelAlgaeP], [DelAlgaeN], [DelAlgaeF], [ClimbT], [EndState], [CageAttempt], [SelectedCage], [PointScored], [DisAlg]) VALUES (@Team, @Match, @Time, @RecordType, @Mode, @DriveSta, @Defense, @DefenseValue, @Avoidance, @ScouterName, @ScouterError, @Match_event, @Strategy, @Coop, @DZTime, @Del_Near_Far, @AcqAlgae_Near_Far, @AcqCoral_Near_Far, @Starting_Loc, @Leave, @AcqCoralS, @AcqCoralF, @AcqAlgaeR, @AcqAlgaeF, @DelCoralL1, @DelCoralL2, @DelCoralL3, @DelCoralL4, @DelCoralF, @DelAlgaeP, @DelAlgaeN, @DelAlgaeF, @ClimbT, @EndState, @CageAttempt, @SelectedCage, @PointScored, @DisAlg);
SELECT Id, Team, Match, Time, RecordType, Mode, DriveSta, Defense, DefenseValue, Avoidance, ScouterName, ScouterError, Match_event, Strategy, Coop, DZTime, Del_Near_Far, AcqAlgae_Near_Far, AcqCoral_Near_Far, Starting_Loc, Leave, AcqCoralS, AcqCoralF, AcqAlgaeR, AcqAlgaeF, DelCoralL1, DelCoralL2, DelCoralL3, DelCoralL4, DelCoralF, DelAlgaeP, DelAlgaeN, DelAlgaeF, ClimbT, EndState, CageAttempt, SelectedCage, PointScored, DisAlg FROM UpdatePreviews WHERE (Id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Team", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Team", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Match", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Match", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriveSta", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriveSta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Defense", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Defense", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefenseValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefenseValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Avoidance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Avoidance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScouterName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScouterName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScouterError", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScouterError", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Match_event", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Match_event", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Strategy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Strategy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Coop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DZTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DZTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Del_Near_Far", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Del_Near_Far", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqAlgae_Near_Far", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgae_Near_Far", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqCoral_Near_Far", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoral_Near_Far", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Starting_Loc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Starting_Loc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Leave", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Leave", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqCoralS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoralS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqCoralF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoralF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqAlgaeR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgaeR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqAlgaeF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgaeF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralL1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralL2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralL3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralL4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelAlgaeP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelAlgaeN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelAlgaeF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClimbT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClimbT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndState", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CageAttempt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CageAttempt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedCage", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedCage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PointScored", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointScored", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DisAlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DisAlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[UpdatePreviews] SET [Team] = @Team, [Match] = @Match, [Time] = @Tim" +
                "e, [RecordType] = @RecordType, [Mode] = @Mode, [DriveSta] = @DriveSta, [Defense]" +
                " = @Defense, [DefenseValue] = @DefenseValue, [Avoidance] = @Avoidance, [ScouterN" +
                "ame] = @ScouterName, [ScouterError] = @ScouterError, [Match_event] = @Match_even" +
                "t, [Strategy] = @Strategy, [Coop] = @Coop, [DZTime] = @DZTime, [Del_Near_Far] = " +
                "@Del_Near_Far, [AcqAlgae_Near_Far] = @AcqAlgae_Near_Far, [AcqCoral_Near_Far] = @" +
                "AcqCoral_Near_Far, [Starting_Loc] = @Starting_Loc, [Leave] = @Leave, [AcqCoralS]" +
                " = @AcqCoralS, [AcqCoralF] = @AcqCoralF, [AcqAlgaeR] = @AcqAlgaeR, [AcqAlgaeF] =" +
                " @AcqAlgaeF, [DelCoralL1] = @DelCoralL1, [DelCoralL2] = @DelCoralL2, [DelCoralL3" +
                "] = @DelCoralL3, [DelCoralL4] = @DelCoralL4, [DelCoralF] = @DelCoralF, [DelAlgae" +
                "P] = @DelAlgaeP, [DelAlgaeN] = @DelAlgaeN, [DelAlgaeF] = @DelAlgaeF, [ClimbT] = " +
                "@ClimbT, [EndState] = @EndState, [CageAttempt] = @CageAttempt, [SelectedCage] = " +
                "@SelectedCage, [PointScored] = @PointScored, [DisAlg] = @DisAlg WHERE (([Id] = @" +
                "Original_Id) AND ([Match] = @Original_Match) AND ([Time] = @Original_Time) AND (" +
                "[ScouterError] = @Original_ScouterError) AND ([Coop] = @Original_Coop) AND ([DZT" +
                "ime] = @Original_DZTime) AND ([AcqCoralS] = @Original_AcqCoralS) AND ([AcqCoralF" +
                "] = @Original_AcqCoralF) AND ([AcqAlgaeR] = @Original_AcqAlgaeR) AND ([AcqAlgaeF" +
                "] = @Original_AcqAlgaeF) AND ([DelCoralL1] = @Original_DelCoralL1) AND ([DelCora" +
                "lL2] = @Original_DelCoralL2) AND ([DelCoralL3] = @Original_DelCoralL3) AND ([Del" +
                "CoralL4] = @Original_DelCoralL4) AND ([DelCoralF] = @Original_DelCoralF) AND ([D" +
                "elAlgaeP] = @Original_DelAlgaeP) AND ([DelAlgaeN] = @Original_DelAlgaeN) AND ([D" +
                "elAlgaeF] = @Original_DelAlgaeF) AND ([ClimbT] = @Original_ClimbT) AND ([DisAlg]" +
                " = @Original_DisAlg));\r\nSELECT Id, Team, Match, Time, RecordType, Mode, DriveSta" +
                ", Defense, DefenseValue, Avoidance, ScouterName, ScouterError, Match_event, Stra" +
                "tegy, Coop, DZTime, Del_Near_Far, AcqAlgae_Near_Far, AcqCoral_Near_Far, Starting" +
                "_Loc, Leave, AcqCoralS, AcqCoralF, AcqAlgaeR, AcqAlgaeF, DelCoralL1, DelCoralL2," +
                " DelCoralL3, DelCoralL4, DelCoralF, DelAlgaeP, DelAlgaeN, DelAlgaeF, ClimbT, End" +
                "State, CageAttempt, SelectedCage, PointScored, DisAlg FROM UpdatePreviews WHERE " +
                "(Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Team", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Team", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Match", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Match", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecordType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriveSta", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriveSta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Defense", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Defense", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefenseValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefenseValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Avoidance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Avoidance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScouterName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScouterName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScouterError", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScouterError", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Match_event", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Match_event", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Strategy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Strategy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Coop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DZTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DZTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Del_Near_Far", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Del_Near_Far", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqAlgae_Near_Far", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgae_Near_Far", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqCoral_Near_Far", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoral_Near_Far", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Starting_Loc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Starting_Loc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Leave", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Leave", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqCoralS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoralS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqCoralF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoralF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqAlgaeR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgaeR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcqAlgaeF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgaeF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralL1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralL2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralL3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralL4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelCoralF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelAlgaeP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelAlgaeN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelAlgaeF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClimbT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClimbT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndState", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CageAttempt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CageAttempt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SelectedCage", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SelectedCage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PointScored", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointScored", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DisAlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DisAlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Match", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Match", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScouterError", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScouterError", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Coop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DZTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DZTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqCoralS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoralS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqCoralF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqCoralF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqAlgaeR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgaeR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcqAlgaeF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcqAlgaeF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralL1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralL2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralL3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralL4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralL4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelCoralF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelCoralF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelAlgaeP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelAlgaeN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelAlgaeF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelAlgaeF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClimbT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClimbT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DisAlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DisAlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControllerScouting.Properties.Settings.Default.scoutingdbConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, Team, Match, Time, RecordType, Mode, DriveSta, Defense, DefenseValue, Avoidance, ScouterName, ScouterError, Match_event, Strategy, Coop, DZTime, Del_Near_Far, AcqAlgae_Near_Far, AcqCoral_Near_Far, Starting_Loc, Leave, AcqCoralS, AcqCoralF, AcqAlgaeR, AcqAlgaeF, DelCoralL1, DelCoralL2, DelCoralL3, DelCoralL4, DelCoralF, DelAlgaeP, DelAlgaeN, DelAlgaeF, ClimbT, EndState, CageAttempt, SelectedCage, PointScored, DisAlg FROM dbo.UpdatePreviews";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(scoutingdbDataSet.UpdatePreviewsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual scoutingdbDataSet.UpdatePreviewsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            scoutingdbDataSet.UpdatePreviewsDataTable dataTable = new scoutingdbDataSet.UpdatePreviewsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(scoutingdbDataSet.UpdatePreviewsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(scoutingdbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "UpdatePreviews");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Id, 
                    int Original_Match, 
                    System.DateTime Original_Time, 
                    long Original_ScouterError, 
                    int Original_Coop, 
                    double Original_DZTime, 
                    int Original_AcqCoralS, 
                    int Original_AcqCoralF, 
                    int Original_AcqAlgaeR, 
                    int Original_AcqAlgaeF, 
                    int Original_DelCoralL1, 
                    int Original_DelCoralL2, 
                    int Original_DelCoralL3, 
                    int Original_DelCoralL4, 
                    int Original_DelCoralF, 
                    int Original_DelAlgaeP, 
                    int Original_DelAlgaeN, 
                    int Original_DelAlgaeF, 
                    double Original_ClimbT, 
                    int Original_DisAlg) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Match));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_Time));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((long)(Original_ScouterError));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Coop));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_DZTime));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_AcqCoralS));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_AcqCoralF));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_AcqAlgaeR));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_AcqAlgaeF));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_DelCoralL1));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_DelCoralL2));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_DelCoralL3));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_DelCoralL4));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_DelCoralF));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_DelAlgaeP));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_DelAlgaeN));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_DelAlgaeF));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_ClimbT));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_DisAlg));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Team, 
                    int Match, 
                    System.DateTime Time, 
                    string RecordType, 
                    string Mode, 
                    string DriveSta, 
                    string Defense, 
                    string DefenseValue, 
                    string Avoidance, 
                    string ScouterName, 
                    long ScouterError, 
                    string Match_event, 
                    string Strategy, 
                    int Coop, 
                    double DZTime, 
                    string Del_Near_Far, 
                    string AcqAlgae_Near_Far, 
                    string AcqCoral_Near_Far, 
                    string Starting_Loc, 
                    string Leave, 
                    int AcqCoralS, 
                    int AcqCoralF, 
                    int AcqAlgaeR, 
                    int AcqAlgaeF, 
                    int DelCoralL1, 
                    int DelCoralL2, 
                    int DelCoralL3, 
                    int DelCoralL4, 
                    int DelCoralF, 
                    int DelAlgaeP, 
                    int DelAlgaeN, 
                    int DelAlgaeF, 
                    double ClimbT, 
                    string EndState, 
                    string CageAttempt, 
                    string SelectedCage, 
                    string PointScored, 
                    int DisAlg) {
            if ((Team == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Team));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Match));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Time));
            if ((RecordType == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(RecordType));
            }
            if ((Mode == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Mode));
            }
            if ((DriveSta == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(DriveSta));
            }
            if ((Defense == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Defense));
            }
            if ((DefenseValue == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(DefenseValue));
            }
            if ((Avoidance == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Avoidance));
            }
            if ((ScouterName == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ScouterName));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((long)(ScouterError));
            if ((Match_event == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Match_event));
            }
            if ((Strategy == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Strategy));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(Coop));
            this.Adapter.InsertCommand.Parameters[14].Value = ((double)(DZTime));
            if ((Del_Near_Far == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Del_Near_Far));
            }
            if ((AcqAlgae_Near_Far == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(AcqAlgae_Near_Far));
            }
            if ((AcqCoral_Near_Far == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(AcqCoral_Near_Far));
            }
            if ((Starting_Loc == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Starting_Loc));
            }
            if ((Leave == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Leave));
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((int)(AcqCoralS));
            this.Adapter.InsertCommand.Parameters[21].Value = ((int)(AcqCoralF));
            this.Adapter.InsertCommand.Parameters[22].Value = ((int)(AcqAlgaeR));
            this.Adapter.InsertCommand.Parameters[23].Value = ((int)(AcqAlgaeF));
            this.Adapter.InsertCommand.Parameters[24].Value = ((int)(DelCoralL1));
            this.Adapter.InsertCommand.Parameters[25].Value = ((int)(DelCoralL2));
            this.Adapter.InsertCommand.Parameters[26].Value = ((int)(DelCoralL3));
            this.Adapter.InsertCommand.Parameters[27].Value = ((int)(DelCoralL4));
            this.Adapter.InsertCommand.Parameters[28].Value = ((int)(DelCoralF));
            this.Adapter.InsertCommand.Parameters[29].Value = ((int)(DelAlgaeP));
            this.Adapter.InsertCommand.Parameters[30].Value = ((int)(DelAlgaeN));
            this.Adapter.InsertCommand.Parameters[31].Value = ((int)(DelAlgaeF));
            this.Adapter.InsertCommand.Parameters[32].Value = ((double)(ClimbT));
            if ((EndState == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(EndState));
            }
            if ((CageAttempt == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(CageAttempt));
            }
            if ((SelectedCage == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(SelectedCage));
            }
            if ((PointScored == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(PointScored));
            }
            this.Adapter.InsertCommand.Parameters[37].Value = ((int)(DisAlg));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Team, 
                    int Match, 
                    System.DateTime Time, 
                    string RecordType, 
                    string Mode, 
                    string DriveSta, 
                    string Defense, 
                    string DefenseValue, 
                    string Avoidance, 
                    string ScouterName, 
                    long ScouterError, 
                    string Match_event, 
                    string Strategy, 
                    int Coop, 
                    double DZTime, 
                    string Del_Near_Far, 
                    string AcqAlgae_Near_Far, 
                    string AcqCoral_Near_Far, 
                    string Starting_Loc, 
                    string Leave, 
                    int AcqCoralS, 
                    int AcqCoralF, 
                    int AcqAlgaeR, 
                    int AcqAlgaeF, 
                    int DelCoralL1, 
                    int DelCoralL2, 
                    int DelCoralL3, 
                    int DelCoralL4, 
                    int DelCoralF, 
                    int DelAlgaeP, 
                    int DelAlgaeN, 
                    int DelAlgaeF, 
                    double ClimbT, 
                    string EndState, 
                    string CageAttempt, 
                    string SelectedCage, 
                    string PointScored, 
                    int DisAlg, 
                    int Original_Id, 
                    int Original_Match, 
                    System.DateTime Original_Time, 
                    long Original_ScouterError, 
                    int Original_Coop, 
                    double Original_DZTime, 
                    int Original_AcqCoralS, 
                    int Original_AcqCoralF, 
                    int Original_AcqAlgaeR, 
                    int Original_AcqAlgaeF, 
                    int Original_DelCoralL1, 
                    int Original_DelCoralL2, 
                    int Original_DelCoralL3, 
                    int Original_DelCoralL4, 
                    int Original_DelCoralF, 
                    int Original_DelAlgaeP, 
                    int Original_DelAlgaeN, 
                    int Original_DelAlgaeF, 
                    double Original_ClimbT, 
                    int Original_DisAlg, 
                    int Id) {
            if ((Team == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Team));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Match));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Time));
            if ((RecordType == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(RecordType));
            }
            if ((Mode == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Mode));
            }
            if ((DriveSta == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(DriveSta));
            }
            if ((Defense == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Defense));
            }
            if ((DefenseValue == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(DefenseValue));
            }
            if ((Avoidance == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Avoidance));
            }
            if ((ScouterName == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ScouterName));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(ScouterError));
            if ((Match_event == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Match_event));
            }
            if ((Strategy == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Strategy));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Coop));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(DZTime));
            if ((Del_Near_Far == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Del_Near_Far));
            }
            if ((AcqAlgae_Near_Far == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(AcqAlgae_Near_Far));
            }
            if ((AcqCoral_Near_Far == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(AcqCoral_Near_Far));
            }
            if ((Starting_Loc == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Starting_Loc));
            }
            if ((Leave == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Leave));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(AcqCoralS));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(AcqCoralF));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(AcqAlgaeR));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(AcqAlgaeF));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(DelCoralL1));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(DelCoralL2));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(DelCoralL3));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(DelCoralL4));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(DelCoralF));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(DelAlgaeP));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(DelAlgaeN));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(DelAlgaeF));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(ClimbT));
            if ((EndState == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(EndState));
            }
            if ((CageAttempt == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(CageAttempt));
            }
            if ((SelectedCage == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(SelectedCage));
            }
            if ((PointScored == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(PointScored));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(DisAlg));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_Id));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_Match));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(Original_Time));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((long)(Original_ScouterError));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_Coop));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((double)(Original_DZTime));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(Original_AcqCoralS));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_AcqCoralF));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Original_AcqAlgaeR));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(Original_AcqAlgaeF));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(Original_DelCoralL1));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_DelCoralL2));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(Original_DelCoralL3));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(Original_DelCoralL4));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(Original_DelCoralF));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(Original_DelAlgaeP));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(Original_DelAlgaeN));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(Original_DelAlgaeF));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((double)(Original_ClimbT));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_DisAlg));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Team, 
                    int Match, 
                    System.DateTime Time, 
                    string RecordType, 
                    string Mode, 
                    string DriveSta, 
                    string Defense, 
                    string DefenseValue, 
                    string Avoidance, 
                    string ScouterName, 
                    long ScouterError, 
                    string Match_event, 
                    string Strategy, 
                    int Coop, 
                    double DZTime, 
                    string Del_Near_Far, 
                    string AcqAlgae_Near_Far, 
                    string AcqCoral_Near_Far, 
                    string Starting_Loc, 
                    string Leave, 
                    int AcqCoralS, 
                    int AcqCoralF, 
                    int AcqAlgaeR, 
                    int AcqAlgaeF, 
                    int DelCoralL1, 
                    int DelCoralL2, 
                    int DelCoralL3, 
                    int DelCoralL4, 
                    int DelCoralF, 
                    int DelAlgaeP, 
                    int DelAlgaeN, 
                    int DelAlgaeF, 
                    double ClimbT, 
                    string EndState, 
                    string CageAttempt, 
                    string SelectedCage, 
                    string PointScored, 
                    int DisAlg, 
                    int Original_Id, 
                    int Original_Match, 
                    System.DateTime Original_Time, 
                    long Original_ScouterError, 
                    int Original_Coop, 
                    double Original_DZTime, 
                    int Original_AcqCoralS, 
                    int Original_AcqCoralF, 
                    int Original_AcqAlgaeR, 
                    int Original_AcqAlgaeF, 
                    int Original_DelCoralL1, 
                    int Original_DelCoralL2, 
                    int Original_DelCoralL3, 
                    int Original_DelCoralL4, 
                    int Original_DelCoralF, 
                    int Original_DelAlgaeP, 
                    int Original_DelAlgaeN, 
                    int Original_DelAlgaeF, 
                    double Original_ClimbT, 
                    int Original_DisAlg) {
            return this.Update(Team, Match, Time, RecordType, Mode, DriveSta, Defense, DefenseValue, Avoidance, ScouterName, ScouterError, Match_event, Strategy, Coop, DZTime, Del_Near_Far, AcqAlgae_Near_Far, AcqCoral_Near_Far, Starting_Loc, Leave, AcqCoralS, AcqCoralF, AcqAlgaeR, AcqAlgaeF, DelCoralL1, DelCoralL2, DelCoralL3, DelCoralL4, DelCoralF, DelAlgaeP, DelAlgaeN, DelAlgaeF, ClimbT, EndState, CageAttempt, SelectedCage, PointScored, DisAlg, Original_Id, Original_Match, Original_Time, Original_ScouterError, Original_Coop, Original_DZTime, Original_AcqCoralS, Original_AcqCoralF, Original_AcqAlgaeR, Original_AcqAlgaeF, Original_DelCoralL1, Original_DelCoralL2, Original_DelCoralL3, Original_DelCoralL4, Original_DelCoralF, Original_DelAlgaeP, Original_DelAlgaeN, Original_DelAlgaeF, Original_ClimbT, Original_DisAlg, Original_Id);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ActivitiesTableAdapter _activitiesTableAdapter;
        
        private UpdatePreviewsTableAdapter _updatePreviewsTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ActivitiesTableAdapter ActivitiesTableAdapter {
            get {
                return this._activitiesTableAdapter;
            }
            set {
                this._activitiesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public UpdatePreviewsTableAdapter UpdatePreviewsTableAdapter {
            get {
                return this._updatePreviewsTableAdapter;
            }
            set {
                this._updatePreviewsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._activitiesTableAdapter != null) 
                            && (this._activitiesTableAdapter.Connection != null))) {
                    return this._activitiesTableAdapter.Connection;
                }
                if (((this._updatePreviewsTableAdapter != null) 
                            && (this._updatePreviewsTableAdapter.Connection != null))) {
                    return this._updatePreviewsTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._activitiesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._updatePreviewsTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(scoutingdbDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._activitiesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Activities.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._activitiesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._updatePreviewsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UpdatePreviews.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._updatePreviewsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(scoutingdbDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._activitiesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Activities.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._activitiesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._updatePreviewsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UpdatePreviews.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._updatePreviewsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(scoutingdbDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._updatePreviewsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UpdatePreviews.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._updatePreviewsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._activitiesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Activities.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._activitiesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(scoutingdbDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._activitiesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._activitiesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._updatePreviewsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._updatePreviewsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._activitiesTableAdapter != null)) {
                    revertConnections.Add(this._activitiesTableAdapter, this._activitiesTableAdapter.Connection);
                    this._activitiesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._activitiesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._activitiesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._activitiesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._activitiesTableAdapter.Adapter);
                    }
                }
                if ((this._updatePreviewsTableAdapter != null)) {
                    revertConnections.Add(this._updatePreviewsTableAdapter, this._updatePreviewsTableAdapter.Connection);
                    this._updatePreviewsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._updatePreviewsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._updatePreviewsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._updatePreviewsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._updatePreviewsTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._activitiesTableAdapter != null)) {
                    this._activitiesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._activitiesTableAdapter]));
                    this._activitiesTableAdapter.Transaction = null;
                }
                if ((this._updatePreviewsTableAdapter != null)) {
                    this._updatePreviewsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._updatePreviewsTableAdapter]));
                    this._updatePreviewsTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591